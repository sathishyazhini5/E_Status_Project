
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model metadata_mst
 * 
 */
export type metadata_mst = $Result.DefaultSelection<Prisma.$metadata_mstPayload>
/**
 * Model quickcode_mst
 * 
 */
export type quickcode_mst = $Result.DefaultSelection<Prisma.$quickcode_mstPayload>
/**
 * Model country_mst
 * 
 */
export type country_mst = $Result.DefaultSelection<Prisma.$country_mstPayload>
/**
 * Model state_mst
 * 
 */
export type state_mst = $Result.DefaultSelection<Prisma.$state_mstPayload>
/**
 * Model province_mst
 * 
 */
export type province_mst = $Result.DefaultSelection<Prisma.$province_mstPayload>
/**
 * Model apostolates_mst
 * 
 */
export type apostolates_mst = $Result.DefaultSelection<Prisma.$apostolates_mstPayload>
/**
 * Model users_mst
 * 
 */
export type users_mst = $Result.DefaultSelection<Prisma.$users_mstPayload>
/**
 * Model division_setup_mst
 * 
 */
export type division_setup_mst = $Result.DefaultSelection<Prisma.$division_setup_mstPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Metadata_msts
 * const metadata_msts = await prisma.metadata_mst.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Metadata_msts
   * const metadata_msts = await prisma.metadata_mst.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.metadata_mst`: Exposes CRUD operations for the **metadata_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Metadata_msts
    * const metadata_msts = await prisma.metadata_mst.findMany()
    * ```
    */
  get metadata_mst(): Prisma.metadata_mstDelegate<ExtArgs>;

  /**
   * `prisma.quickcode_mst`: Exposes CRUD operations for the **quickcode_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Quickcode_msts
    * const quickcode_msts = await prisma.quickcode_mst.findMany()
    * ```
    */
  get quickcode_mst(): Prisma.quickcode_mstDelegate<ExtArgs>;

  /**
   * `prisma.country_mst`: Exposes CRUD operations for the **country_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Country_msts
    * const country_msts = await prisma.country_mst.findMany()
    * ```
    */
  get country_mst(): Prisma.country_mstDelegate<ExtArgs>;

  /**
   * `prisma.state_mst`: Exposes CRUD operations for the **state_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more State_msts
    * const state_msts = await prisma.state_mst.findMany()
    * ```
    */
  get state_mst(): Prisma.state_mstDelegate<ExtArgs>;

  /**
   * `prisma.province_mst`: Exposes CRUD operations for the **province_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Province_msts
    * const province_msts = await prisma.province_mst.findMany()
    * ```
    */
  get province_mst(): Prisma.province_mstDelegate<ExtArgs>;

  /**
   * `prisma.apostolates_mst`: Exposes CRUD operations for the **apostolates_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Apostolates_msts
    * const apostolates_msts = await prisma.apostolates_mst.findMany()
    * ```
    */
  get apostolates_mst(): Prisma.apostolates_mstDelegate<ExtArgs>;

  /**
   * `prisma.users_mst`: Exposes CRUD operations for the **users_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users_msts
    * const users_msts = await prisma.users_mst.findMany()
    * ```
    */
  get users_mst(): Prisma.users_mstDelegate<ExtArgs>;

  /**
   * `prisma.division_setup_mst`: Exposes CRUD operations for the **division_setup_mst** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Division_setup_msts
    * const division_setup_msts = await prisma.division_setup_mst.findMany()
    * ```
    */
  get division_setup_mst(): Prisma.division_setup_mstDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.16.2
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    metadata_mst: 'metadata_mst',
    quickcode_mst: 'quickcode_mst',
    country_mst: 'country_mst',
    state_mst: 'state_mst',
    province_mst: 'province_mst',
    apostolates_mst: 'apostolates_mst',
    users_mst: 'users_mst',
    division_setup_mst: 'division_setup_mst'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "metadata_mst" | "quickcode_mst" | "country_mst" | "state_mst" | "province_mst" | "apostolates_mst" | "users_mst" | "division_setup_mst"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      metadata_mst: {
        payload: Prisma.$metadata_mstPayload<ExtArgs>
        fields: Prisma.metadata_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.metadata_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.metadata_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          findFirst: {
            args: Prisma.metadata_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.metadata_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          findMany: {
            args: Prisma.metadata_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>[]
          }
          create: {
            args: Prisma.metadata_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          createMany: {
            args: Prisma.metadata_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.metadata_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>[]
          }
          delete: {
            args: Prisma.metadata_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          update: {
            args: Prisma.metadata_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          deleteMany: {
            args: Prisma.metadata_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.metadata_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.metadata_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metadata_mstPayload>
          }
          aggregate: {
            args: Prisma.Metadata_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetadata_mst>
          }
          groupBy: {
            args: Prisma.metadata_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Metadata_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.metadata_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Metadata_mstCountAggregateOutputType> | number
          }
        }
      }
      quickcode_mst: {
        payload: Prisma.$quickcode_mstPayload<ExtArgs>
        fields: Prisma.quickcode_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.quickcode_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.quickcode_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          findFirst: {
            args: Prisma.quickcode_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.quickcode_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          findMany: {
            args: Prisma.quickcode_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>[]
          }
          create: {
            args: Prisma.quickcode_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          createMany: {
            args: Prisma.quickcode_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.quickcode_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>[]
          }
          delete: {
            args: Prisma.quickcode_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          update: {
            args: Prisma.quickcode_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          deleteMany: {
            args: Prisma.quickcode_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.quickcode_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.quickcode_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quickcode_mstPayload>
          }
          aggregate: {
            args: Prisma.Quickcode_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuickcode_mst>
          }
          groupBy: {
            args: Prisma.quickcode_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Quickcode_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.quickcode_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Quickcode_mstCountAggregateOutputType> | number
          }
        }
      }
      country_mst: {
        payload: Prisma.$country_mstPayload<ExtArgs>
        fields: Prisma.country_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.country_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.country_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          findFirst: {
            args: Prisma.country_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.country_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          findMany: {
            args: Prisma.country_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>[]
          }
          create: {
            args: Prisma.country_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          createMany: {
            args: Prisma.country_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.country_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>[]
          }
          delete: {
            args: Prisma.country_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          update: {
            args: Prisma.country_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          deleteMany: {
            args: Prisma.country_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.country_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.country_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$country_mstPayload>
          }
          aggregate: {
            args: Prisma.Country_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry_mst>
          }
          groupBy: {
            args: Prisma.country_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Country_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.country_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Country_mstCountAggregateOutputType> | number
          }
        }
      }
      state_mst: {
        payload: Prisma.$state_mstPayload<ExtArgs>
        fields: Prisma.state_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.state_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.state_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          findFirst: {
            args: Prisma.state_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.state_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          findMany: {
            args: Prisma.state_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>[]
          }
          create: {
            args: Prisma.state_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          createMany: {
            args: Prisma.state_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.state_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>[]
          }
          delete: {
            args: Prisma.state_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          update: {
            args: Prisma.state_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          deleteMany: {
            args: Prisma.state_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.state_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.state_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$state_mstPayload>
          }
          aggregate: {
            args: Prisma.State_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateState_mst>
          }
          groupBy: {
            args: Prisma.state_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<State_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.state_mstCountArgs<ExtArgs>
            result: $Utils.Optional<State_mstCountAggregateOutputType> | number
          }
        }
      }
      province_mst: {
        payload: Prisma.$province_mstPayload<ExtArgs>
        fields: Prisma.province_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.province_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.province_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          findFirst: {
            args: Prisma.province_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.province_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          findMany: {
            args: Prisma.province_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>[]
          }
          create: {
            args: Prisma.province_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          createMany: {
            args: Prisma.province_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.province_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>[]
          }
          delete: {
            args: Prisma.province_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          update: {
            args: Prisma.province_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          deleteMany: {
            args: Prisma.province_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.province_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.province_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$province_mstPayload>
          }
          aggregate: {
            args: Prisma.Province_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvince_mst>
          }
          groupBy: {
            args: Prisma.province_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Province_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.province_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Province_mstCountAggregateOutputType> | number
          }
        }
      }
      apostolates_mst: {
        payload: Prisma.$apostolates_mstPayload<ExtArgs>
        fields: Prisma.apostolates_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.apostolates_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.apostolates_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          findFirst: {
            args: Prisma.apostolates_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.apostolates_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          findMany: {
            args: Prisma.apostolates_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>[]
          }
          create: {
            args: Prisma.apostolates_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          createMany: {
            args: Prisma.apostolates_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.apostolates_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>[]
          }
          delete: {
            args: Prisma.apostolates_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          update: {
            args: Prisma.apostolates_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          deleteMany: {
            args: Prisma.apostolates_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.apostolates_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.apostolates_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$apostolates_mstPayload>
          }
          aggregate: {
            args: Prisma.Apostolates_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApostolates_mst>
          }
          groupBy: {
            args: Prisma.apostolates_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Apostolates_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.apostolates_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Apostolates_mstCountAggregateOutputType> | number
          }
        }
      }
      users_mst: {
        payload: Prisma.$users_mstPayload<ExtArgs>
        fields: Prisma.users_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.users_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.users_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          findFirst: {
            args: Prisma.users_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.users_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          findMany: {
            args: Prisma.users_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>[]
          }
          create: {
            args: Prisma.users_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          createMany: {
            args: Prisma.users_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.users_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>[]
          }
          delete: {
            args: Prisma.users_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          update: {
            args: Prisma.users_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          deleteMany: {
            args: Prisma.users_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.users_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.users_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_mstPayload>
          }
          aggregate: {
            args: Prisma.Users_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers_mst>
          }
          groupBy: {
            args: Prisma.users_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Users_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.users_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Users_mstCountAggregateOutputType> | number
          }
        }
      }
      division_setup_mst: {
        payload: Prisma.$division_setup_mstPayload<ExtArgs>
        fields: Prisma.division_setup_mstFieldRefs
        operations: {
          findUnique: {
            args: Prisma.division_setup_mstFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.division_setup_mstFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          findFirst: {
            args: Prisma.division_setup_mstFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.division_setup_mstFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          findMany: {
            args: Prisma.division_setup_mstFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>[]
          }
          create: {
            args: Prisma.division_setup_mstCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          createMany: {
            args: Prisma.division_setup_mstCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.division_setup_mstCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>[]
          }
          delete: {
            args: Prisma.division_setup_mstDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          update: {
            args: Prisma.division_setup_mstUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          deleteMany: {
            args: Prisma.division_setup_mstDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.division_setup_mstUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.division_setup_mstUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$division_setup_mstPayload>
          }
          aggregate: {
            args: Prisma.Division_setup_mstAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDivision_setup_mst>
          }
          groupBy: {
            args: Prisma.division_setup_mstGroupByArgs<ExtArgs>
            result: $Utils.Optional<Division_setup_mstGroupByOutputType>[]
          }
          count: {
            args: Prisma.division_setup_mstCountArgs<ExtArgs>
            result: $Utils.Optional<Division_setup_mstCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model metadata_mst
   */

  export type AggregateMetadata_mst = {
    _count: Metadata_mstCountAggregateOutputType | null
    _min: Metadata_mstMinAggregateOutputType | null
    _max: Metadata_mstMaxAggregateOutputType | null
  }

  export type Metadata_mstMinAggregateOutputType = {
    screen_code: string | null
    meta_code: string | null
    screen_name: string | null
    meta_code_name: string | null
  }

  export type Metadata_mstMaxAggregateOutputType = {
    screen_code: string | null
    meta_code: string | null
    screen_name: string | null
    meta_code_name: string | null
  }

  export type Metadata_mstCountAggregateOutputType = {
    screen_code: number
    meta_code: number
    screen_name: number
    meta_code_name: number
    _all: number
  }


  export type Metadata_mstMinAggregateInputType = {
    screen_code?: true
    meta_code?: true
    screen_name?: true
    meta_code_name?: true
  }

  export type Metadata_mstMaxAggregateInputType = {
    screen_code?: true
    meta_code?: true
    screen_name?: true
    meta_code_name?: true
  }

  export type Metadata_mstCountAggregateInputType = {
    screen_code?: true
    meta_code?: true
    screen_name?: true
    meta_code_name?: true
    _all?: true
  }

  export type Metadata_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metadata_mst to aggregate.
     */
    where?: metadata_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metadata_msts to fetch.
     */
    orderBy?: metadata_mstOrderByWithRelationInput | metadata_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: metadata_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metadata_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metadata_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned metadata_msts
    **/
    _count?: true | Metadata_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Metadata_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Metadata_mstMaxAggregateInputType
  }

  export type GetMetadata_mstAggregateType<T extends Metadata_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateMetadata_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetadata_mst[P]>
      : GetScalarType<T[P], AggregateMetadata_mst[P]>
  }




  export type metadata_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: metadata_mstWhereInput
    orderBy?: metadata_mstOrderByWithAggregationInput | metadata_mstOrderByWithAggregationInput[]
    by: Metadata_mstScalarFieldEnum[] | Metadata_mstScalarFieldEnum
    having?: metadata_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Metadata_mstCountAggregateInputType | true
    _min?: Metadata_mstMinAggregateInputType
    _max?: Metadata_mstMaxAggregateInputType
  }

  export type Metadata_mstGroupByOutputType = {
    screen_code: string
    meta_code: string
    screen_name: string
    meta_code_name: string
    _count: Metadata_mstCountAggregateOutputType | null
    _min: Metadata_mstMinAggregateOutputType | null
    _max: Metadata_mstMaxAggregateOutputType | null
  }

  type GetMetadata_mstGroupByPayload<T extends metadata_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Metadata_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Metadata_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Metadata_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Metadata_mstGroupByOutputType[P]>
        }
      >
    >


  export type metadata_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    screen_code?: boolean
    meta_code?: boolean
    screen_name?: boolean
    meta_code_name?: boolean
  }, ExtArgs["result"]["metadata_mst"]>

  export type metadata_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    screen_code?: boolean
    meta_code?: boolean
    screen_name?: boolean
    meta_code_name?: boolean
  }, ExtArgs["result"]["metadata_mst"]>

  export type metadata_mstSelectScalar = {
    screen_code?: boolean
    meta_code?: boolean
    screen_name?: boolean
    meta_code_name?: boolean
  }


  export type $metadata_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "metadata_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      screen_code: string
      meta_code: string
      screen_name: string
      meta_code_name: string
    }, ExtArgs["result"]["metadata_mst"]>
    composites: {}
  }

  type metadata_mstGetPayload<S extends boolean | null | undefined | metadata_mstDefaultArgs> = $Result.GetResult<Prisma.$metadata_mstPayload, S>

  type metadata_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<metadata_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Metadata_mstCountAggregateInputType | true
    }

  export interface metadata_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['metadata_mst'], meta: { name: 'metadata_mst' } }
    /**
     * Find zero or one Metadata_mst that matches the filter.
     * @param {metadata_mstFindUniqueArgs} args - Arguments to find a Metadata_mst
     * @example
     * // Get one Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends metadata_mstFindUniqueArgs>(args: SelectSubset<T, metadata_mstFindUniqueArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Metadata_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {metadata_mstFindUniqueOrThrowArgs} args - Arguments to find a Metadata_mst
     * @example
     * // Get one Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends metadata_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, metadata_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Metadata_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstFindFirstArgs} args - Arguments to find a Metadata_mst
     * @example
     * // Get one Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends metadata_mstFindFirstArgs>(args?: SelectSubset<T, metadata_mstFindFirstArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Metadata_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstFindFirstOrThrowArgs} args - Arguments to find a Metadata_mst
     * @example
     * // Get one Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends metadata_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, metadata_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Metadata_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Metadata_msts
     * const metadata_msts = await prisma.metadata_mst.findMany()
     * 
     * // Get first 10 Metadata_msts
     * const metadata_msts = await prisma.metadata_mst.findMany({ take: 10 })
     * 
     * // Only select the `screen_code`
     * const metadata_mstWithScreen_codeOnly = await prisma.metadata_mst.findMany({ select: { screen_code: true } })
     * 
     */
    findMany<T extends metadata_mstFindManyArgs>(args?: SelectSubset<T, metadata_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Metadata_mst.
     * @param {metadata_mstCreateArgs} args - Arguments to create a Metadata_mst.
     * @example
     * // Create one Metadata_mst
     * const Metadata_mst = await prisma.metadata_mst.create({
     *   data: {
     *     // ... data to create a Metadata_mst
     *   }
     * })
     * 
     */
    create<T extends metadata_mstCreateArgs>(args: SelectSubset<T, metadata_mstCreateArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Metadata_msts.
     * @param {metadata_mstCreateManyArgs} args - Arguments to create many Metadata_msts.
     * @example
     * // Create many Metadata_msts
     * const metadata_mst = await prisma.metadata_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends metadata_mstCreateManyArgs>(args?: SelectSubset<T, metadata_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Metadata_msts and returns the data saved in the database.
     * @param {metadata_mstCreateManyAndReturnArgs} args - Arguments to create many Metadata_msts.
     * @example
     * // Create many Metadata_msts
     * const metadata_mst = await prisma.metadata_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Metadata_msts and only return the `screen_code`
     * const metadata_mstWithScreen_codeOnly = await prisma.metadata_mst.createManyAndReturn({ 
     *   select: { screen_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends metadata_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, metadata_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Metadata_mst.
     * @param {metadata_mstDeleteArgs} args - Arguments to delete one Metadata_mst.
     * @example
     * // Delete one Metadata_mst
     * const Metadata_mst = await prisma.metadata_mst.delete({
     *   where: {
     *     // ... filter to delete one Metadata_mst
     *   }
     * })
     * 
     */
    delete<T extends metadata_mstDeleteArgs>(args: SelectSubset<T, metadata_mstDeleteArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Metadata_mst.
     * @param {metadata_mstUpdateArgs} args - Arguments to update one Metadata_mst.
     * @example
     * // Update one Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends metadata_mstUpdateArgs>(args: SelectSubset<T, metadata_mstUpdateArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Metadata_msts.
     * @param {metadata_mstDeleteManyArgs} args - Arguments to filter Metadata_msts to delete.
     * @example
     * // Delete a few Metadata_msts
     * const { count } = await prisma.metadata_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends metadata_mstDeleteManyArgs>(args?: SelectSubset<T, metadata_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Metadata_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Metadata_msts
     * const metadata_mst = await prisma.metadata_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends metadata_mstUpdateManyArgs>(args: SelectSubset<T, metadata_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Metadata_mst.
     * @param {metadata_mstUpsertArgs} args - Arguments to update or create a Metadata_mst.
     * @example
     * // Update or create a Metadata_mst
     * const metadata_mst = await prisma.metadata_mst.upsert({
     *   create: {
     *     // ... data to create a Metadata_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Metadata_mst we want to update
     *   }
     * })
     */
    upsert<T extends metadata_mstUpsertArgs>(args: SelectSubset<T, metadata_mstUpsertArgs<ExtArgs>>): Prisma__metadata_mstClient<$Result.GetResult<Prisma.$metadata_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Metadata_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstCountArgs} args - Arguments to filter Metadata_msts to count.
     * @example
     * // Count the number of Metadata_msts
     * const count = await prisma.metadata_mst.count({
     *   where: {
     *     // ... the filter for the Metadata_msts we want to count
     *   }
     * })
    **/
    count<T extends metadata_mstCountArgs>(
      args?: Subset<T, metadata_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Metadata_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Metadata_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Metadata_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Metadata_mstAggregateArgs>(args: Subset<T, Metadata_mstAggregateArgs>): Prisma.PrismaPromise<GetMetadata_mstAggregateType<T>>

    /**
     * Group by Metadata_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metadata_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends metadata_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: metadata_mstGroupByArgs['orderBy'] }
        : { orderBy?: metadata_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, metadata_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetadata_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the metadata_mst model
   */
  readonly fields: metadata_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for metadata_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__metadata_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the metadata_mst model
   */ 
  interface metadata_mstFieldRefs {
    readonly screen_code: FieldRef<"metadata_mst", 'String'>
    readonly meta_code: FieldRef<"metadata_mst", 'String'>
    readonly screen_name: FieldRef<"metadata_mst", 'String'>
    readonly meta_code_name: FieldRef<"metadata_mst", 'String'>
  }
    

  // Custom InputTypes
  /**
   * metadata_mst findUnique
   */
  export type metadata_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter, which metadata_mst to fetch.
     */
    where: metadata_mstWhereUniqueInput
  }

  /**
   * metadata_mst findUniqueOrThrow
   */
  export type metadata_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter, which metadata_mst to fetch.
     */
    where: metadata_mstWhereUniqueInput
  }

  /**
   * metadata_mst findFirst
   */
  export type metadata_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter, which metadata_mst to fetch.
     */
    where?: metadata_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metadata_msts to fetch.
     */
    orderBy?: metadata_mstOrderByWithRelationInput | metadata_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metadata_msts.
     */
    cursor?: metadata_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metadata_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metadata_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metadata_msts.
     */
    distinct?: Metadata_mstScalarFieldEnum | Metadata_mstScalarFieldEnum[]
  }

  /**
   * metadata_mst findFirstOrThrow
   */
  export type metadata_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter, which metadata_mst to fetch.
     */
    where?: metadata_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metadata_msts to fetch.
     */
    orderBy?: metadata_mstOrderByWithRelationInput | metadata_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metadata_msts.
     */
    cursor?: metadata_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metadata_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metadata_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metadata_msts.
     */
    distinct?: Metadata_mstScalarFieldEnum | Metadata_mstScalarFieldEnum[]
  }

  /**
   * metadata_mst findMany
   */
  export type metadata_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter, which metadata_msts to fetch.
     */
    where?: metadata_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metadata_msts to fetch.
     */
    orderBy?: metadata_mstOrderByWithRelationInput | metadata_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing metadata_msts.
     */
    cursor?: metadata_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metadata_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metadata_msts.
     */
    skip?: number
    distinct?: Metadata_mstScalarFieldEnum | Metadata_mstScalarFieldEnum[]
  }

  /**
   * metadata_mst create
   */
  export type metadata_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a metadata_mst.
     */
    data: XOR<metadata_mstCreateInput, metadata_mstUncheckedCreateInput>
  }

  /**
   * metadata_mst createMany
   */
  export type metadata_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many metadata_msts.
     */
    data: metadata_mstCreateManyInput | metadata_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * metadata_mst createManyAndReturn
   */
  export type metadata_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many metadata_msts.
     */
    data: metadata_mstCreateManyInput | metadata_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * metadata_mst update
   */
  export type metadata_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a metadata_mst.
     */
    data: XOR<metadata_mstUpdateInput, metadata_mstUncheckedUpdateInput>
    /**
     * Choose, which metadata_mst to update.
     */
    where: metadata_mstWhereUniqueInput
  }

  /**
   * metadata_mst updateMany
   */
  export type metadata_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update metadata_msts.
     */
    data: XOR<metadata_mstUpdateManyMutationInput, metadata_mstUncheckedUpdateManyInput>
    /**
     * Filter which metadata_msts to update
     */
    where?: metadata_mstWhereInput
  }

  /**
   * metadata_mst upsert
   */
  export type metadata_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the metadata_mst to update in case it exists.
     */
    where: metadata_mstWhereUniqueInput
    /**
     * In case the metadata_mst found by the `where` argument doesn't exist, create a new metadata_mst with this data.
     */
    create: XOR<metadata_mstCreateInput, metadata_mstUncheckedCreateInput>
    /**
     * In case the metadata_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<metadata_mstUpdateInput, metadata_mstUncheckedUpdateInput>
  }

  /**
   * metadata_mst delete
   */
  export type metadata_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
    /**
     * Filter which metadata_mst to delete.
     */
    where: metadata_mstWhereUniqueInput
  }

  /**
   * metadata_mst deleteMany
   */
  export type metadata_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metadata_msts to delete
     */
    where?: metadata_mstWhereInput
  }

  /**
   * metadata_mst without action
   */
  export type metadata_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metadata_mst
     */
    select?: metadata_mstSelect<ExtArgs> | null
  }


  /**
   * Model quickcode_mst
   */

  export type AggregateQuickcode_mst = {
    _count: Quickcode_mstCountAggregateOutputType | null
    _avg: Quickcode_mstAvgAggregateOutputType | null
    _sum: Quickcode_mstSumAggregateOutputType | null
    _min: Quickcode_mstMinAggregateOutputType | null
    _max: Quickcode_mstMaxAggregateOutputType | null
  }

  export type Quickcode_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Quickcode_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Quickcode_mstMinAggregateOutputType = {
    quick_code_type: string | null
    quick_code: string | null
    language_code: number | null
    quickcode_name: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Quickcode_mstMaxAggregateOutputType = {
    quick_code_type: string | null
    quick_code: string | null
    language_code: number | null
    quickcode_name: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Quickcode_mstCountAggregateOutputType = {
    quick_code_type: number
    quick_code: number
    language_code: number
    quickcode_name: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Quickcode_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Quickcode_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Quickcode_mstMinAggregateInputType = {
    quick_code_type?: true
    quick_code?: true
    language_code?: true
    quickcode_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Quickcode_mstMaxAggregateInputType = {
    quick_code_type?: true
    quick_code?: true
    language_code?: true
    quickcode_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Quickcode_mstCountAggregateInputType = {
    quick_code_type?: true
    quick_code?: true
    language_code?: true
    quickcode_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Quickcode_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quickcode_mst to aggregate.
     */
    where?: quickcode_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quickcode_msts to fetch.
     */
    orderBy?: quickcode_mstOrderByWithRelationInput | quickcode_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: quickcode_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quickcode_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quickcode_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned quickcode_msts
    **/
    _count?: true | Quickcode_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Quickcode_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Quickcode_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Quickcode_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Quickcode_mstMaxAggregateInputType
  }

  export type GetQuickcode_mstAggregateType<T extends Quickcode_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateQuickcode_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuickcode_mst[P]>
      : GetScalarType<T[P], AggregateQuickcode_mst[P]>
  }




  export type quickcode_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: quickcode_mstWhereInput
    orderBy?: quickcode_mstOrderByWithAggregationInput | quickcode_mstOrderByWithAggregationInput[]
    by: Quickcode_mstScalarFieldEnum[] | Quickcode_mstScalarFieldEnum
    having?: quickcode_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Quickcode_mstCountAggregateInputType | true
    _avg?: Quickcode_mstAvgAggregateInputType
    _sum?: Quickcode_mstSumAggregateInputType
    _min?: Quickcode_mstMinAggregateInputType
    _max?: Quickcode_mstMaxAggregateInputType
  }

  export type Quickcode_mstGroupByOutputType = {
    quick_code_type: string
    quick_code: string
    language_code: number
    quickcode_name: string
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Quickcode_mstCountAggregateOutputType | null
    _avg: Quickcode_mstAvgAggregateOutputType | null
    _sum: Quickcode_mstSumAggregateOutputType | null
    _min: Quickcode_mstMinAggregateOutputType | null
    _max: Quickcode_mstMaxAggregateOutputType | null
  }

  type GetQuickcode_mstGroupByPayload<T extends quickcode_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Quickcode_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Quickcode_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Quickcode_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Quickcode_mstGroupByOutputType[P]>
        }
      >
    >


  export type quickcode_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    quick_code_type?: boolean
    quick_code?: boolean
    language_code?: boolean
    quickcode_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["quickcode_mst"]>

  export type quickcode_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    quick_code_type?: boolean
    quick_code?: boolean
    language_code?: boolean
    quickcode_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["quickcode_mst"]>

  export type quickcode_mstSelectScalar = {
    quick_code_type?: boolean
    quick_code?: boolean
    language_code?: boolean
    quickcode_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $quickcode_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "quickcode_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      quick_code_type: string
      quick_code: string
      language_code: number
      quickcode_name: string
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["quickcode_mst"]>
    composites: {}
  }

  type quickcode_mstGetPayload<S extends boolean | null | undefined | quickcode_mstDefaultArgs> = $Result.GetResult<Prisma.$quickcode_mstPayload, S>

  type quickcode_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<quickcode_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Quickcode_mstCountAggregateInputType | true
    }

  export interface quickcode_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['quickcode_mst'], meta: { name: 'quickcode_mst' } }
    /**
     * Find zero or one Quickcode_mst that matches the filter.
     * @param {quickcode_mstFindUniqueArgs} args - Arguments to find a Quickcode_mst
     * @example
     * // Get one Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends quickcode_mstFindUniqueArgs>(args: SelectSubset<T, quickcode_mstFindUniqueArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Quickcode_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {quickcode_mstFindUniqueOrThrowArgs} args - Arguments to find a Quickcode_mst
     * @example
     * // Get one Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends quickcode_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, quickcode_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Quickcode_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstFindFirstArgs} args - Arguments to find a Quickcode_mst
     * @example
     * // Get one Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends quickcode_mstFindFirstArgs>(args?: SelectSubset<T, quickcode_mstFindFirstArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Quickcode_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstFindFirstOrThrowArgs} args - Arguments to find a Quickcode_mst
     * @example
     * // Get one Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends quickcode_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, quickcode_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Quickcode_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Quickcode_msts
     * const quickcode_msts = await prisma.quickcode_mst.findMany()
     * 
     * // Get first 10 Quickcode_msts
     * const quickcode_msts = await prisma.quickcode_mst.findMany({ take: 10 })
     * 
     * // Only select the `quick_code_type`
     * const quickcode_mstWithQuick_code_typeOnly = await prisma.quickcode_mst.findMany({ select: { quick_code_type: true } })
     * 
     */
    findMany<T extends quickcode_mstFindManyArgs>(args?: SelectSubset<T, quickcode_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Quickcode_mst.
     * @param {quickcode_mstCreateArgs} args - Arguments to create a Quickcode_mst.
     * @example
     * // Create one Quickcode_mst
     * const Quickcode_mst = await prisma.quickcode_mst.create({
     *   data: {
     *     // ... data to create a Quickcode_mst
     *   }
     * })
     * 
     */
    create<T extends quickcode_mstCreateArgs>(args: SelectSubset<T, quickcode_mstCreateArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Quickcode_msts.
     * @param {quickcode_mstCreateManyArgs} args - Arguments to create many Quickcode_msts.
     * @example
     * // Create many Quickcode_msts
     * const quickcode_mst = await prisma.quickcode_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends quickcode_mstCreateManyArgs>(args?: SelectSubset<T, quickcode_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Quickcode_msts and returns the data saved in the database.
     * @param {quickcode_mstCreateManyAndReturnArgs} args - Arguments to create many Quickcode_msts.
     * @example
     * // Create many Quickcode_msts
     * const quickcode_mst = await prisma.quickcode_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Quickcode_msts and only return the `quick_code_type`
     * const quickcode_mstWithQuick_code_typeOnly = await prisma.quickcode_mst.createManyAndReturn({ 
     *   select: { quick_code_type: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends quickcode_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, quickcode_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Quickcode_mst.
     * @param {quickcode_mstDeleteArgs} args - Arguments to delete one Quickcode_mst.
     * @example
     * // Delete one Quickcode_mst
     * const Quickcode_mst = await prisma.quickcode_mst.delete({
     *   where: {
     *     // ... filter to delete one Quickcode_mst
     *   }
     * })
     * 
     */
    delete<T extends quickcode_mstDeleteArgs>(args: SelectSubset<T, quickcode_mstDeleteArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Quickcode_mst.
     * @param {quickcode_mstUpdateArgs} args - Arguments to update one Quickcode_mst.
     * @example
     * // Update one Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends quickcode_mstUpdateArgs>(args: SelectSubset<T, quickcode_mstUpdateArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Quickcode_msts.
     * @param {quickcode_mstDeleteManyArgs} args - Arguments to filter Quickcode_msts to delete.
     * @example
     * // Delete a few Quickcode_msts
     * const { count } = await prisma.quickcode_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends quickcode_mstDeleteManyArgs>(args?: SelectSubset<T, quickcode_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quickcode_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Quickcode_msts
     * const quickcode_mst = await prisma.quickcode_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends quickcode_mstUpdateManyArgs>(args: SelectSubset<T, quickcode_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Quickcode_mst.
     * @param {quickcode_mstUpsertArgs} args - Arguments to update or create a Quickcode_mst.
     * @example
     * // Update or create a Quickcode_mst
     * const quickcode_mst = await prisma.quickcode_mst.upsert({
     *   create: {
     *     // ... data to create a Quickcode_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Quickcode_mst we want to update
     *   }
     * })
     */
    upsert<T extends quickcode_mstUpsertArgs>(args: SelectSubset<T, quickcode_mstUpsertArgs<ExtArgs>>): Prisma__quickcode_mstClient<$Result.GetResult<Prisma.$quickcode_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Quickcode_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstCountArgs} args - Arguments to filter Quickcode_msts to count.
     * @example
     * // Count the number of Quickcode_msts
     * const count = await prisma.quickcode_mst.count({
     *   where: {
     *     // ... the filter for the Quickcode_msts we want to count
     *   }
     * })
    **/
    count<T extends quickcode_mstCountArgs>(
      args?: Subset<T, quickcode_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Quickcode_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Quickcode_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Quickcode_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Quickcode_mstAggregateArgs>(args: Subset<T, Quickcode_mstAggregateArgs>): Prisma.PrismaPromise<GetQuickcode_mstAggregateType<T>>

    /**
     * Group by Quickcode_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quickcode_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends quickcode_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: quickcode_mstGroupByArgs['orderBy'] }
        : { orderBy?: quickcode_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, quickcode_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuickcode_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the quickcode_mst model
   */
  readonly fields: quickcode_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for quickcode_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__quickcode_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the quickcode_mst model
   */ 
  interface quickcode_mstFieldRefs {
    readonly quick_code_type: FieldRef<"quickcode_mst", 'String'>
    readonly quick_code: FieldRef<"quickcode_mst", 'String'>
    readonly language_code: FieldRef<"quickcode_mst", 'Int'>
    readonly quickcode_name: FieldRef<"quickcode_mst", 'String'>
    readonly concurrency_val: FieldRef<"quickcode_mst", 'Int'>
    readonly created_by: FieldRef<"quickcode_mst", 'String'>
    readonly created_date: FieldRef<"quickcode_mst", 'DateTime'>
    readonly updated_by: FieldRef<"quickcode_mst", 'String'>
    readonly updated_date: FieldRef<"quickcode_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * quickcode_mst findUnique
   */
  export type quickcode_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter, which quickcode_mst to fetch.
     */
    where: quickcode_mstWhereUniqueInput
  }

  /**
   * quickcode_mst findUniqueOrThrow
   */
  export type quickcode_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter, which quickcode_mst to fetch.
     */
    where: quickcode_mstWhereUniqueInput
  }

  /**
   * quickcode_mst findFirst
   */
  export type quickcode_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter, which quickcode_mst to fetch.
     */
    where?: quickcode_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quickcode_msts to fetch.
     */
    orderBy?: quickcode_mstOrderByWithRelationInput | quickcode_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quickcode_msts.
     */
    cursor?: quickcode_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quickcode_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quickcode_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quickcode_msts.
     */
    distinct?: Quickcode_mstScalarFieldEnum | Quickcode_mstScalarFieldEnum[]
  }

  /**
   * quickcode_mst findFirstOrThrow
   */
  export type quickcode_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter, which quickcode_mst to fetch.
     */
    where?: quickcode_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quickcode_msts to fetch.
     */
    orderBy?: quickcode_mstOrderByWithRelationInput | quickcode_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quickcode_msts.
     */
    cursor?: quickcode_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quickcode_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quickcode_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quickcode_msts.
     */
    distinct?: Quickcode_mstScalarFieldEnum | Quickcode_mstScalarFieldEnum[]
  }

  /**
   * quickcode_mst findMany
   */
  export type quickcode_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter, which quickcode_msts to fetch.
     */
    where?: quickcode_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quickcode_msts to fetch.
     */
    orderBy?: quickcode_mstOrderByWithRelationInput | quickcode_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing quickcode_msts.
     */
    cursor?: quickcode_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quickcode_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quickcode_msts.
     */
    skip?: number
    distinct?: Quickcode_mstScalarFieldEnum | Quickcode_mstScalarFieldEnum[]
  }

  /**
   * quickcode_mst create
   */
  export type quickcode_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a quickcode_mst.
     */
    data: XOR<quickcode_mstCreateInput, quickcode_mstUncheckedCreateInput>
  }

  /**
   * quickcode_mst createMany
   */
  export type quickcode_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many quickcode_msts.
     */
    data: quickcode_mstCreateManyInput | quickcode_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * quickcode_mst createManyAndReturn
   */
  export type quickcode_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many quickcode_msts.
     */
    data: quickcode_mstCreateManyInput | quickcode_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * quickcode_mst update
   */
  export type quickcode_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a quickcode_mst.
     */
    data: XOR<quickcode_mstUpdateInput, quickcode_mstUncheckedUpdateInput>
    /**
     * Choose, which quickcode_mst to update.
     */
    where: quickcode_mstWhereUniqueInput
  }

  /**
   * quickcode_mst updateMany
   */
  export type quickcode_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update quickcode_msts.
     */
    data: XOR<quickcode_mstUpdateManyMutationInput, quickcode_mstUncheckedUpdateManyInput>
    /**
     * Filter which quickcode_msts to update
     */
    where?: quickcode_mstWhereInput
  }

  /**
   * quickcode_mst upsert
   */
  export type quickcode_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the quickcode_mst to update in case it exists.
     */
    where: quickcode_mstWhereUniqueInput
    /**
     * In case the quickcode_mst found by the `where` argument doesn't exist, create a new quickcode_mst with this data.
     */
    create: XOR<quickcode_mstCreateInput, quickcode_mstUncheckedCreateInput>
    /**
     * In case the quickcode_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<quickcode_mstUpdateInput, quickcode_mstUncheckedUpdateInput>
  }

  /**
   * quickcode_mst delete
   */
  export type quickcode_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
    /**
     * Filter which quickcode_mst to delete.
     */
    where: quickcode_mstWhereUniqueInput
  }

  /**
   * quickcode_mst deleteMany
   */
  export type quickcode_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quickcode_msts to delete
     */
    where?: quickcode_mstWhereInput
  }

  /**
   * quickcode_mst without action
   */
  export type quickcode_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quickcode_mst
     */
    select?: quickcode_mstSelect<ExtArgs> | null
  }


  /**
   * Model country_mst
   */

  export type AggregateCountry_mst = {
    _count: Country_mstCountAggregateOutputType | null
    _avg: Country_mstAvgAggregateOutputType | null
    _sum: Country_mstSumAggregateOutputType | null
    _min: Country_mstMinAggregateOutputType | null
    _max: Country_mstMaxAggregateOutputType | null
  }

  export type Country_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Country_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Country_mstMinAggregateOutputType = {
    country_code: string | null
    language_code: number | null
    country_name: string | null
    nationality: string | null
    ISD_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Country_mstMaxAggregateOutputType = {
    country_code: string | null
    language_code: number | null
    country_name: string | null
    nationality: string | null
    ISD_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Country_mstCountAggregateOutputType = {
    country_code: number
    language_code: number
    country_name: number
    nationality: number
    ISD_code: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Country_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Country_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Country_mstMinAggregateInputType = {
    country_code?: true
    language_code?: true
    country_name?: true
    nationality?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Country_mstMaxAggregateInputType = {
    country_code?: true
    language_code?: true
    country_name?: true
    nationality?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Country_mstCountAggregateInputType = {
    country_code?: true
    language_code?: true
    country_name?: true
    nationality?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Country_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which country_mst to aggregate.
     */
    where?: country_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of country_msts to fetch.
     */
    orderBy?: country_mstOrderByWithRelationInput | country_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: country_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` country_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` country_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned country_msts
    **/
    _count?: true | Country_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Country_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Country_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Country_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Country_mstMaxAggregateInputType
  }

  export type GetCountry_mstAggregateType<T extends Country_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry_mst[P]>
      : GetScalarType<T[P], AggregateCountry_mst[P]>
  }




  export type country_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: country_mstWhereInput
    orderBy?: country_mstOrderByWithAggregationInput | country_mstOrderByWithAggregationInput[]
    by: Country_mstScalarFieldEnum[] | Country_mstScalarFieldEnum
    having?: country_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Country_mstCountAggregateInputType | true
    _avg?: Country_mstAvgAggregateInputType
    _sum?: Country_mstSumAggregateInputType
    _min?: Country_mstMinAggregateInputType
    _max?: Country_mstMaxAggregateInputType
  }

  export type Country_mstGroupByOutputType = {
    country_code: string
    language_code: number
    country_name: string
    nationality: string
    ISD_code: string
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Country_mstCountAggregateOutputType | null
    _avg: Country_mstAvgAggregateOutputType | null
    _sum: Country_mstSumAggregateOutputType | null
    _min: Country_mstMinAggregateOutputType | null
    _max: Country_mstMaxAggregateOutputType | null
  }

  type GetCountry_mstGroupByPayload<T extends country_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Country_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Country_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Country_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Country_mstGroupByOutputType[P]>
        }
      >
    >


  export type country_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    country_code?: boolean
    language_code?: boolean
    country_name?: boolean
    nationality?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["country_mst"]>

  export type country_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    country_code?: boolean
    language_code?: boolean
    country_name?: boolean
    nationality?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["country_mst"]>

  export type country_mstSelectScalar = {
    country_code?: boolean
    language_code?: boolean
    country_name?: boolean
    nationality?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $country_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "country_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      country_code: string
      language_code: number
      country_name: string
      nationality: string
      ISD_code: string
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["country_mst"]>
    composites: {}
  }

  type country_mstGetPayload<S extends boolean | null | undefined | country_mstDefaultArgs> = $Result.GetResult<Prisma.$country_mstPayload, S>

  type country_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<country_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Country_mstCountAggregateInputType | true
    }

  export interface country_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['country_mst'], meta: { name: 'country_mst' } }
    /**
     * Find zero or one Country_mst that matches the filter.
     * @param {country_mstFindUniqueArgs} args - Arguments to find a Country_mst
     * @example
     * // Get one Country_mst
     * const country_mst = await prisma.country_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends country_mstFindUniqueArgs>(args: SelectSubset<T, country_mstFindUniqueArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Country_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {country_mstFindUniqueOrThrowArgs} args - Arguments to find a Country_mst
     * @example
     * // Get one Country_mst
     * const country_mst = await prisma.country_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends country_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, country_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Country_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstFindFirstArgs} args - Arguments to find a Country_mst
     * @example
     * // Get one Country_mst
     * const country_mst = await prisma.country_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends country_mstFindFirstArgs>(args?: SelectSubset<T, country_mstFindFirstArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Country_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstFindFirstOrThrowArgs} args - Arguments to find a Country_mst
     * @example
     * // Get one Country_mst
     * const country_mst = await prisma.country_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends country_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, country_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Country_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Country_msts
     * const country_msts = await prisma.country_mst.findMany()
     * 
     * // Get first 10 Country_msts
     * const country_msts = await prisma.country_mst.findMany({ take: 10 })
     * 
     * // Only select the `country_code`
     * const country_mstWithCountry_codeOnly = await prisma.country_mst.findMany({ select: { country_code: true } })
     * 
     */
    findMany<T extends country_mstFindManyArgs>(args?: SelectSubset<T, country_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Country_mst.
     * @param {country_mstCreateArgs} args - Arguments to create a Country_mst.
     * @example
     * // Create one Country_mst
     * const Country_mst = await prisma.country_mst.create({
     *   data: {
     *     // ... data to create a Country_mst
     *   }
     * })
     * 
     */
    create<T extends country_mstCreateArgs>(args: SelectSubset<T, country_mstCreateArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Country_msts.
     * @param {country_mstCreateManyArgs} args - Arguments to create many Country_msts.
     * @example
     * // Create many Country_msts
     * const country_mst = await prisma.country_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends country_mstCreateManyArgs>(args?: SelectSubset<T, country_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Country_msts and returns the data saved in the database.
     * @param {country_mstCreateManyAndReturnArgs} args - Arguments to create many Country_msts.
     * @example
     * // Create many Country_msts
     * const country_mst = await prisma.country_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Country_msts and only return the `country_code`
     * const country_mstWithCountry_codeOnly = await prisma.country_mst.createManyAndReturn({ 
     *   select: { country_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends country_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, country_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Country_mst.
     * @param {country_mstDeleteArgs} args - Arguments to delete one Country_mst.
     * @example
     * // Delete one Country_mst
     * const Country_mst = await prisma.country_mst.delete({
     *   where: {
     *     // ... filter to delete one Country_mst
     *   }
     * })
     * 
     */
    delete<T extends country_mstDeleteArgs>(args: SelectSubset<T, country_mstDeleteArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Country_mst.
     * @param {country_mstUpdateArgs} args - Arguments to update one Country_mst.
     * @example
     * // Update one Country_mst
     * const country_mst = await prisma.country_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends country_mstUpdateArgs>(args: SelectSubset<T, country_mstUpdateArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Country_msts.
     * @param {country_mstDeleteManyArgs} args - Arguments to filter Country_msts to delete.
     * @example
     * // Delete a few Country_msts
     * const { count } = await prisma.country_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends country_mstDeleteManyArgs>(args?: SelectSubset<T, country_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Country_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Country_msts
     * const country_mst = await prisma.country_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends country_mstUpdateManyArgs>(args: SelectSubset<T, country_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Country_mst.
     * @param {country_mstUpsertArgs} args - Arguments to update or create a Country_mst.
     * @example
     * // Update or create a Country_mst
     * const country_mst = await prisma.country_mst.upsert({
     *   create: {
     *     // ... data to create a Country_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country_mst we want to update
     *   }
     * })
     */
    upsert<T extends country_mstUpsertArgs>(args: SelectSubset<T, country_mstUpsertArgs<ExtArgs>>): Prisma__country_mstClient<$Result.GetResult<Prisma.$country_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Country_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstCountArgs} args - Arguments to filter Country_msts to count.
     * @example
     * // Count the number of Country_msts
     * const count = await prisma.country_mst.count({
     *   where: {
     *     // ... the filter for the Country_msts we want to count
     *   }
     * })
    **/
    count<T extends country_mstCountArgs>(
      args?: Subset<T, country_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Country_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Country_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Country_mstAggregateArgs>(args: Subset<T, Country_mstAggregateArgs>): Prisma.PrismaPromise<GetCountry_mstAggregateType<T>>

    /**
     * Group by Country_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {country_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends country_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: country_mstGroupByArgs['orderBy'] }
        : { orderBy?: country_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, country_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountry_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the country_mst model
   */
  readonly fields: country_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for country_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__country_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the country_mst model
   */ 
  interface country_mstFieldRefs {
    readonly country_code: FieldRef<"country_mst", 'String'>
    readonly language_code: FieldRef<"country_mst", 'Int'>
    readonly country_name: FieldRef<"country_mst", 'String'>
    readonly nationality: FieldRef<"country_mst", 'String'>
    readonly ISD_code: FieldRef<"country_mst", 'String'>
    readonly concurrency_val: FieldRef<"country_mst", 'Int'>
    readonly created_by: FieldRef<"country_mst", 'String'>
    readonly created_date: FieldRef<"country_mst", 'DateTime'>
    readonly updated_by: FieldRef<"country_mst", 'String'>
    readonly updated_date: FieldRef<"country_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * country_mst findUnique
   */
  export type country_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter, which country_mst to fetch.
     */
    where: country_mstWhereUniqueInput
  }

  /**
   * country_mst findUniqueOrThrow
   */
  export type country_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter, which country_mst to fetch.
     */
    where: country_mstWhereUniqueInput
  }

  /**
   * country_mst findFirst
   */
  export type country_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter, which country_mst to fetch.
     */
    where?: country_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of country_msts to fetch.
     */
    orderBy?: country_mstOrderByWithRelationInput | country_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for country_msts.
     */
    cursor?: country_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` country_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` country_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of country_msts.
     */
    distinct?: Country_mstScalarFieldEnum | Country_mstScalarFieldEnum[]
  }

  /**
   * country_mst findFirstOrThrow
   */
  export type country_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter, which country_mst to fetch.
     */
    where?: country_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of country_msts to fetch.
     */
    orderBy?: country_mstOrderByWithRelationInput | country_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for country_msts.
     */
    cursor?: country_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` country_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` country_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of country_msts.
     */
    distinct?: Country_mstScalarFieldEnum | Country_mstScalarFieldEnum[]
  }

  /**
   * country_mst findMany
   */
  export type country_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter, which country_msts to fetch.
     */
    where?: country_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of country_msts to fetch.
     */
    orderBy?: country_mstOrderByWithRelationInput | country_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing country_msts.
     */
    cursor?: country_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` country_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` country_msts.
     */
    skip?: number
    distinct?: Country_mstScalarFieldEnum | Country_mstScalarFieldEnum[]
  }

  /**
   * country_mst create
   */
  export type country_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a country_mst.
     */
    data: XOR<country_mstCreateInput, country_mstUncheckedCreateInput>
  }

  /**
   * country_mst createMany
   */
  export type country_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many country_msts.
     */
    data: country_mstCreateManyInput | country_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * country_mst createManyAndReturn
   */
  export type country_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many country_msts.
     */
    data: country_mstCreateManyInput | country_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * country_mst update
   */
  export type country_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a country_mst.
     */
    data: XOR<country_mstUpdateInput, country_mstUncheckedUpdateInput>
    /**
     * Choose, which country_mst to update.
     */
    where: country_mstWhereUniqueInput
  }

  /**
   * country_mst updateMany
   */
  export type country_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update country_msts.
     */
    data: XOR<country_mstUpdateManyMutationInput, country_mstUncheckedUpdateManyInput>
    /**
     * Filter which country_msts to update
     */
    where?: country_mstWhereInput
  }

  /**
   * country_mst upsert
   */
  export type country_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the country_mst to update in case it exists.
     */
    where: country_mstWhereUniqueInput
    /**
     * In case the country_mst found by the `where` argument doesn't exist, create a new country_mst with this data.
     */
    create: XOR<country_mstCreateInput, country_mstUncheckedCreateInput>
    /**
     * In case the country_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<country_mstUpdateInput, country_mstUncheckedUpdateInput>
  }

  /**
   * country_mst delete
   */
  export type country_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
    /**
     * Filter which country_mst to delete.
     */
    where: country_mstWhereUniqueInput
  }

  /**
   * country_mst deleteMany
   */
  export type country_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which country_msts to delete
     */
    where?: country_mstWhereInput
  }

  /**
   * country_mst without action
   */
  export type country_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country_mst
     */
    select?: country_mstSelect<ExtArgs> | null
  }


  /**
   * Model state_mst
   */

  export type AggregateState_mst = {
    _count: State_mstCountAggregateOutputType | null
    _avg: State_mstAvgAggregateOutputType | null
    _sum: State_mstSumAggregateOutputType | null
    _min: State_mstMinAggregateOutputType | null
    _max: State_mstMaxAggregateOutputType | null
  }

  export type State_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type State_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type State_mstMinAggregateOutputType = {
    state_code: string | null
    country_code: string | null
    language_code: number | null
    state_name: string | null
    ISD_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type State_mstMaxAggregateOutputType = {
    state_code: string | null
    country_code: string | null
    language_code: number | null
    state_name: string | null
    ISD_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type State_mstCountAggregateOutputType = {
    state_code: number
    country_code: number
    language_code: number
    state_name: number
    ISD_code: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type State_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type State_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type State_mstMinAggregateInputType = {
    state_code?: true
    country_code?: true
    language_code?: true
    state_name?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type State_mstMaxAggregateInputType = {
    state_code?: true
    country_code?: true
    language_code?: true
    state_name?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type State_mstCountAggregateInputType = {
    state_code?: true
    country_code?: true
    language_code?: true
    state_name?: true
    ISD_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type State_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which state_mst to aggregate.
     */
    where?: state_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of state_msts to fetch.
     */
    orderBy?: state_mstOrderByWithRelationInput | state_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: state_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` state_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` state_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned state_msts
    **/
    _count?: true | State_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: State_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: State_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: State_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: State_mstMaxAggregateInputType
  }

  export type GetState_mstAggregateType<T extends State_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateState_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateState_mst[P]>
      : GetScalarType<T[P], AggregateState_mst[P]>
  }




  export type state_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: state_mstWhereInput
    orderBy?: state_mstOrderByWithAggregationInput | state_mstOrderByWithAggregationInput[]
    by: State_mstScalarFieldEnum[] | State_mstScalarFieldEnum
    having?: state_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: State_mstCountAggregateInputType | true
    _avg?: State_mstAvgAggregateInputType
    _sum?: State_mstSumAggregateInputType
    _min?: State_mstMinAggregateInputType
    _max?: State_mstMaxAggregateInputType
  }

  export type State_mstGroupByOutputType = {
    state_code: string
    country_code: string
    language_code: number
    state_name: string
    ISD_code: string
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: State_mstCountAggregateOutputType | null
    _avg: State_mstAvgAggregateOutputType | null
    _sum: State_mstSumAggregateOutputType | null
    _min: State_mstMinAggregateOutputType | null
    _max: State_mstMaxAggregateOutputType | null
  }

  type GetState_mstGroupByPayload<T extends state_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<State_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof State_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], State_mstGroupByOutputType[P]>
            : GetScalarType<T[P], State_mstGroupByOutputType[P]>
        }
      >
    >


  export type state_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    state_code?: boolean
    country_code?: boolean
    language_code?: boolean
    state_name?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["state_mst"]>

  export type state_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    state_code?: boolean
    country_code?: boolean
    language_code?: boolean
    state_name?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["state_mst"]>

  export type state_mstSelectScalar = {
    state_code?: boolean
    country_code?: boolean
    language_code?: boolean
    state_name?: boolean
    ISD_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $state_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "state_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      state_code: string
      country_code: string
      language_code: number
      state_name: string
      ISD_code: string
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["state_mst"]>
    composites: {}
  }

  type state_mstGetPayload<S extends boolean | null | undefined | state_mstDefaultArgs> = $Result.GetResult<Prisma.$state_mstPayload, S>

  type state_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<state_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: State_mstCountAggregateInputType | true
    }

  export interface state_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['state_mst'], meta: { name: 'state_mst' } }
    /**
     * Find zero or one State_mst that matches the filter.
     * @param {state_mstFindUniqueArgs} args - Arguments to find a State_mst
     * @example
     * // Get one State_mst
     * const state_mst = await prisma.state_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends state_mstFindUniqueArgs>(args: SelectSubset<T, state_mstFindUniqueArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one State_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {state_mstFindUniqueOrThrowArgs} args - Arguments to find a State_mst
     * @example
     * // Get one State_mst
     * const state_mst = await prisma.state_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends state_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, state_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first State_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstFindFirstArgs} args - Arguments to find a State_mst
     * @example
     * // Get one State_mst
     * const state_mst = await prisma.state_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends state_mstFindFirstArgs>(args?: SelectSubset<T, state_mstFindFirstArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first State_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstFindFirstOrThrowArgs} args - Arguments to find a State_mst
     * @example
     * // Get one State_mst
     * const state_mst = await prisma.state_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends state_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, state_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more State_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all State_msts
     * const state_msts = await prisma.state_mst.findMany()
     * 
     * // Get first 10 State_msts
     * const state_msts = await prisma.state_mst.findMany({ take: 10 })
     * 
     * // Only select the `state_code`
     * const state_mstWithState_codeOnly = await prisma.state_mst.findMany({ select: { state_code: true } })
     * 
     */
    findMany<T extends state_mstFindManyArgs>(args?: SelectSubset<T, state_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a State_mst.
     * @param {state_mstCreateArgs} args - Arguments to create a State_mst.
     * @example
     * // Create one State_mst
     * const State_mst = await prisma.state_mst.create({
     *   data: {
     *     // ... data to create a State_mst
     *   }
     * })
     * 
     */
    create<T extends state_mstCreateArgs>(args: SelectSubset<T, state_mstCreateArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many State_msts.
     * @param {state_mstCreateManyArgs} args - Arguments to create many State_msts.
     * @example
     * // Create many State_msts
     * const state_mst = await prisma.state_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends state_mstCreateManyArgs>(args?: SelectSubset<T, state_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many State_msts and returns the data saved in the database.
     * @param {state_mstCreateManyAndReturnArgs} args - Arguments to create many State_msts.
     * @example
     * // Create many State_msts
     * const state_mst = await prisma.state_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many State_msts and only return the `state_code`
     * const state_mstWithState_codeOnly = await prisma.state_mst.createManyAndReturn({ 
     *   select: { state_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends state_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, state_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a State_mst.
     * @param {state_mstDeleteArgs} args - Arguments to delete one State_mst.
     * @example
     * // Delete one State_mst
     * const State_mst = await prisma.state_mst.delete({
     *   where: {
     *     // ... filter to delete one State_mst
     *   }
     * })
     * 
     */
    delete<T extends state_mstDeleteArgs>(args: SelectSubset<T, state_mstDeleteArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one State_mst.
     * @param {state_mstUpdateArgs} args - Arguments to update one State_mst.
     * @example
     * // Update one State_mst
     * const state_mst = await prisma.state_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends state_mstUpdateArgs>(args: SelectSubset<T, state_mstUpdateArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more State_msts.
     * @param {state_mstDeleteManyArgs} args - Arguments to filter State_msts to delete.
     * @example
     * // Delete a few State_msts
     * const { count } = await prisma.state_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends state_mstDeleteManyArgs>(args?: SelectSubset<T, state_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more State_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many State_msts
     * const state_mst = await prisma.state_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends state_mstUpdateManyArgs>(args: SelectSubset<T, state_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one State_mst.
     * @param {state_mstUpsertArgs} args - Arguments to update or create a State_mst.
     * @example
     * // Update or create a State_mst
     * const state_mst = await prisma.state_mst.upsert({
     *   create: {
     *     // ... data to create a State_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the State_mst we want to update
     *   }
     * })
     */
    upsert<T extends state_mstUpsertArgs>(args: SelectSubset<T, state_mstUpsertArgs<ExtArgs>>): Prisma__state_mstClient<$Result.GetResult<Prisma.$state_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of State_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstCountArgs} args - Arguments to filter State_msts to count.
     * @example
     * // Count the number of State_msts
     * const count = await prisma.state_mst.count({
     *   where: {
     *     // ... the filter for the State_msts we want to count
     *   }
     * })
    **/
    count<T extends state_mstCountArgs>(
      args?: Subset<T, state_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], State_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a State_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {State_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends State_mstAggregateArgs>(args: Subset<T, State_mstAggregateArgs>): Prisma.PrismaPromise<GetState_mstAggregateType<T>>

    /**
     * Group by State_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {state_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends state_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: state_mstGroupByArgs['orderBy'] }
        : { orderBy?: state_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, state_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetState_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the state_mst model
   */
  readonly fields: state_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for state_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__state_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the state_mst model
   */ 
  interface state_mstFieldRefs {
    readonly state_code: FieldRef<"state_mst", 'String'>
    readonly country_code: FieldRef<"state_mst", 'String'>
    readonly language_code: FieldRef<"state_mst", 'Int'>
    readonly state_name: FieldRef<"state_mst", 'String'>
    readonly ISD_code: FieldRef<"state_mst", 'String'>
    readonly concurrency_val: FieldRef<"state_mst", 'Int'>
    readonly created_by: FieldRef<"state_mst", 'String'>
    readonly created_date: FieldRef<"state_mst", 'DateTime'>
    readonly updated_by: FieldRef<"state_mst", 'String'>
    readonly updated_date: FieldRef<"state_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * state_mst findUnique
   */
  export type state_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter, which state_mst to fetch.
     */
    where: state_mstWhereUniqueInput
  }

  /**
   * state_mst findUniqueOrThrow
   */
  export type state_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter, which state_mst to fetch.
     */
    where: state_mstWhereUniqueInput
  }

  /**
   * state_mst findFirst
   */
  export type state_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter, which state_mst to fetch.
     */
    where?: state_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of state_msts to fetch.
     */
    orderBy?: state_mstOrderByWithRelationInput | state_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for state_msts.
     */
    cursor?: state_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` state_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` state_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of state_msts.
     */
    distinct?: State_mstScalarFieldEnum | State_mstScalarFieldEnum[]
  }

  /**
   * state_mst findFirstOrThrow
   */
  export type state_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter, which state_mst to fetch.
     */
    where?: state_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of state_msts to fetch.
     */
    orderBy?: state_mstOrderByWithRelationInput | state_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for state_msts.
     */
    cursor?: state_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` state_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` state_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of state_msts.
     */
    distinct?: State_mstScalarFieldEnum | State_mstScalarFieldEnum[]
  }

  /**
   * state_mst findMany
   */
  export type state_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter, which state_msts to fetch.
     */
    where?: state_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of state_msts to fetch.
     */
    orderBy?: state_mstOrderByWithRelationInput | state_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing state_msts.
     */
    cursor?: state_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` state_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` state_msts.
     */
    skip?: number
    distinct?: State_mstScalarFieldEnum | State_mstScalarFieldEnum[]
  }

  /**
   * state_mst create
   */
  export type state_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a state_mst.
     */
    data: XOR<state_mstCreateInput, state_mstUncheckedCreateInput>
  }

  /**
   * state_mst createMany
   */
  export type state_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many state_msts.
     */
    data: state_mstCreateManyInput | state_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * state_mst createManyAndReturn
   */
  export type state_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many state_msts.
     */
    data: state_mstCreateManyInput | state_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * state_mst update
   */
  export type state_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a state_mst.
     */
    data: XOR<state_mstUpdateInput, state_mstUncheckedUpdateInput>
    /**
     * Choose, which state_mst to update.
     */
    where: state_mstWhereUniqueInput
  }

  /**
   * state_mst updateMany
   */
  export type state_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update state_msts.
     */
    data: XOR<state_mstUpdateManyMutationInput, state_mstUncheckedUpdateManyInput>
    /**
     * Filter which state_msts to update
     */
    where?: state_mstWhereInput
  }

  /**
   * state_mst upsert
   */
  export type state_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the state_mst to update in case it exists.
     */
    where: state_mstWhereUniqueInput
    /**
     * In case the state_mst found by the `where` argument doesn't exist, create a new state_mst with this data.
     */
    create: XOR<state_mstCreateInput, state_mstUncheckedCreateInput>
    /**
     * In case the state_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<state_mstUpdateInput, state_mstUncheckedUpdateInput>
  }

  /**
   * state_mst delete
   */
  export type state_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
    /**
     * Filter which state_mst to delete.
     */
    where: state_mstWhereUniqueInput
  }

  /**
   * state_mst deleteMany
   */
  export type state_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which state_msts to delete
     */
    where?: state_mstWhereInput
  }

  /**
   * state_mst without action
   */
  export type state_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state_mst
     */
    select?: state_mstSelect<ExtArgs> | null
  }


  /**
   * Model province_mst
   */

  export type AggregateProvince_mst = {
    _count: Province_mstCountAggregateOutputType | null
    _avg: Province_mstAvgAggregateOutputType | null
    _sum: Province_mstSumAggregateOutputType | null
    _min: Province_mstMinAggregateOutputType | null
    _max: Province_mstMaxAggregateOutputType | null
  }

  export type Province_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Province_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Province_mstMinAggregateOutputType = {
    province_code: string | null
    country_code: string | null
    language_code: number | null
    province_name: string | null
    short_name: string | null
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Province_mstMaxAggregateOutputType = {
    province_code: string | null
    country_code: string | null
    language_code: number | null
    province_name: string | null
    short_name: string | null
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Province_mstCountAggregateOutputType = {
    province_code: number
    country_code: number
    language_code: number
    province_name: number
    short_name: number
    date_format: number
    academic_year: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Province_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Province_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Province_mstMinAggregateInputType = {
    province_code?: true
    country_code?: true
    language_code?: true
    province_name?: true
    short_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Province_mstMaxAggregateInputType = {
    province_code?: true
    country_code?: true
    language_code?: true
    province_name?: true
    short_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Province_mstCountAggregateInputType = {
    province_code?: true
    country_code?: true
    language_code?: true
    province_name?: true
    short_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Province_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which province_mst to aggregate.
     */
    where?: province_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of province_msts to fetch.
     */
    orderBy?: province_mstOrderByWithRelationInput | province_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: province_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` province_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` province_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned province_msts
    **/
    _count?: true | Province_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Province_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Province_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Province_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Province_mstMaxAggregateInputType
  }

  export type GetProvince_mstAggregateType<T extends Province_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateProvince_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvince_mst[P]>
      : GetScalarType<T[P], AggregateProvince_mst[P]>
  }




  export type province_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: province_mstWhereInput
    orderBy?: province_mstOrderByWithAggregationInput | province_mstOrderByWithAggregationInput[]
    by: Province_mstScalarFieldEnum[] | Province_mstScalarFieldEnum
    having?: province_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Province_mstCountAggregateInputType | true
    _avg?: Province_mstAvgAggregateInputType
    _sum?: Province_mstSumAggregateInputType
    _min?: Province_mstMinAggregateInputType
    _max?: Province_mstMaxAggregateInputType
  }

  export type Province_mstGroupByOutputType = {
    province_code: string
    country_code: string
    language_code: number
    province_name: string
    short_name: string
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Province_mstCountAggregateOutputType | null
    _avg: Province_mstAvgAggregateOutputType | null
    _sum: Province_mstSumAggregateOutputType | null
    _min: Province_mstMinAggregateOutputType | null
    _max: Province_mstMaxAggregateOutputType | null
  }

  type GetProvince_mstGroupByPayload<T extends province_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Province_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Province_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Province_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Province_mstGroupByOutputType[P]>
        }
      >
    >


  export type province_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    country_code?: boolean
    language_code?: boolean
    province_name?: boolean
    short_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["province_mst"]>

  export type province_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    country_code?: boolean
    language_code?: boolean
    province_name?: boolean
    short_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["province_mst"]>

  export type province_mstSelectScalar = {
    province_code?: boolean
    country_code?: boolean
    language_code?: boolean
    province_name?: boolean
    short_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $province_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "province_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      province_code: string
      country_code: string
      language_code: number
      province_name: string
      short_name: string
      date_format: string | null
      academic_year: string | null
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["province_mst"]>
    composites: {}
  }

  type province_mstGetPayload<S extends boolean | null | undefined | province_mstDefaultArgs> = $Result.GetResult<Prisma.$province_mstPayload, S>

  type province_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<province_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Province_mstCountAggregateInputType | true
    }

  export interface province_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['province_mst'], meta: { name: 'province_mst' } }
    /**
     * Find zero or one Province_mst that matches the filter.
     * @param {province_mstFindUniqueArgs} args - Arguments to find a Province_mst
     * @example
     * // Get one Province_mst
     * const province_mst = await prisma.province_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends province_mstFindUniqueArgs>(args: SelectSubset<T, province_mstFindUniqueArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Province_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {province_mstFindUniqueOrThrowArgs} args - Arguments to find a Province_mst
     * @example
     * // Get one Province_mst
     * const province_mst = await prisma.province_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends province_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, province_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Province_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstFindFirstArgs} args - Arguments to find a Province_mst
     * @example
     * // Get one Province_mst
     * const province_mst = await prisma.province_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends province_mstFindFirstArgs>(args?: SelectSubset<T, province_mstFindFirstArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Province_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstFindFirstOrThrowArgs} args - Arguments to find a Province_mst
     * @example
     * // Get one Province_mst
     * const province_mst = await prisma.province_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends province_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, province_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Province_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Province_msts
     * const province_msts = await prisma.province_mst.findMany()
     * 
     * // Get first 10 Province_msts
     * const province_msts = await prisma.province_mst.findMany({ take: 10 })
     * 
     * // Only select the `province_code`
     * const province_mstWithProvince_codeOnly = await prisma.province_mst.findMany({ select: { province_code: true } })
     * 
     */
    findMany<T extends province_mstFindManyArgs>(args?: SelectSubset<T, province_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Province_mst.
     * @param {province_mstCreateArgs} args - Arguments to create a Province_mst.
     * @example
     * // Create one Province_mst
     * const Province_mst = await prisma.province_mst.create({
     *   data: {
     *     // ... data to create a Province_mst
     *   }
     * })
     * 
     */
    create<T extends province_mstCreateArgs>(args: SelectSubset<T, province_mstCreateArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Province_msts.
     * @param {province_mstCreateManyArgs} args - Arguments to create many Province_msts.
     * @example
     * // Create many Province_msts
     * const province_mst = await prisma.province_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends province_mstCreateManyArgs>(args?: SelectSubset<T, province_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Province_msts and returns the data saved in the database.
     * @param {province_mstCreateManyAndReturnArgs} args - Arguments to create many Province_msts.
     * @example
     * // Create many Province_msts
     * const province_mst = await prisma.province_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Province_msts and only return the `province_code`
     * const province_mstWithProvince_codeOnly = await prisma.province_mst.createManyAndReturn({ 
     *   select: { province_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends province_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, province_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Province_mst.
     * @param {province_mstDeleteArgs} args - Arguments to delete one Province_mst.
     * @example
     * // Delete one Province_mst
     * const Province_mst = await prisma.province_mst.delete({
     *   where: {
     *     // ... filter to delete one Province_mst
     *   }
     * })
     * 
     */
    delete<T extends province_mstDeleteArgs>(args: SelectSubset<T, province_mstDeleteArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Province_mst.
     * @param {province_mstUpdateArgs} args - Arguments to update one Province_mst.
     * @example
     * // Update one Province_mst
     * const province_mst = await prisma.province_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends province_mstUpdateArgs>(args: SelectSubset<T, province_mstUpdateArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Province_msts.
     * @param {province_mstDeleteManyArgs} args - Arguments to filter Province_msts to delete.
     * @example
     * // Delete a few Province_msts
     * const { count } = await prisma.province_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends province_mstDeleteManyArgs>(args?: SelectSubset<T, province_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Province_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Province_msts
     * const province_mst = await prisma.province_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends province_mstUpdateManyArgs>(args: SelectSubset<T, province_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Province_mst.
     * @param {province_mstUpsertArgs} args - Arguments to update or create a Province_mst.
     * @example
     * // Update or create a Province_mst
     * const province_mst = await prisma.province_mst.upsert({
     *   create: {
     *     // ... data to create a Province_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Province_mst we want to update
     *   }
     * })
     */
    upsert<T extends province_mstUpsertArgs>(args: SelectSubset<T, province_mstUpsertArgs<ExtArgs>>): Prisma__province_mstClient<$Result.GetResult<Prisma.$province_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Province_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstCountArgs} args - Arguments to filter Province_msts to count.
     * @example
     * // Count the number of Province_msts
     * const count = await prisma.province_mst.count({
     *   where: {
     *     // ... the filter for the Province_msts we want to count
     *   }
     * })
    **/
    count<T extends province_mstCountArgs>(
      args?: Subset<T, province_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Province_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Province_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Province_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Province_mstAggregateArgs>(args: Subset<T, Province_mstAggregateArgs>): Prisma.PrismaPromise<GetProvince_mstAggregateType<T>>

    /**
     * Group by Province_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {province_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends province_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: province_mstGroupByArgs['orderBy'] }
        : { orderBy?: province_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, province_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvince_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the province_mst model
   */
  readonly fields: province_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for province_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__province_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the province_mst model
   */ 
  interface province_mstFieldRefs {
    readonly province_code: FieldRef<"province_mst", 'String'>
    readonly country_code: FieldRef<"province_mst", 'String'>
    readonly language_code: FieldRef<"province_mst", 'Int'>
    readonly province_name: FieldRef<"province_mst", 'String'>
    readonly short_name: FieldRef<"province_mst", 'String'>
    readonly date_format: FieldRef<"province_mst", 'String'>
    readonly academic_year: FieldRef<"province_mst", 'String'>
    readonly concurrency_val: FieldRef<"province_mst", 'Int'>
    readonly created_by: FieldRef<"province_mst", 'String'>
    readonly created_date: FieldRef<"province_mst", 'DateTime'>
    readonly updated_by: FieldRef<"province_mst", 'String'>
    readonly updated_date: FieldRef<"province_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * province_mst findUnique
   */
  export type province_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter, which province_mst to fetch.
     */
    where: province_mstWhereUniqueInput
  }

  /**
   * province_mst findUniqueOrThrow
   */
  export type province_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter, which province_mst to fetch.
     */
    where: province_mstWhereUniqueInput
  }

  /**
   * province_mst findFirst
   */
  export type province_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter, which province_mst to fetch.
     */
    where?: province_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of province_msts to fetch.
     */
    orderBy?: province_mstOrderByWithRelationInput | province_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for province_msts.
     */
    cursor?: province_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` province_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` province_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of province_msts.
     */
    distinct?: Province_mstScalarFieldEnum | Province_mstScalarFieldEnum[]
  }

  /**
   * province_mst findFirstOrThrow
   */
  export type province_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter, which province_mst to fetch.
     */
    where?: province_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of province_msts to fetch.
     */
    orderBy?: province_mstOrderByWithRelationInput | province_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for province_msts.
     */
    cursor?: province_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` province_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` province_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of province_msts.
     */
    distinct?: Province_mstScalarFieldEnum | Province_mstScalarFieldEnum[]
  }

  /**
   * province_mst findMany
   */
  export type province_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter, which province_msts to fetch.
     */
    where?: province_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of province_msts to fetch.
     */
    orderBy?: province_mstOrderByWithRelationInput | province_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing province_msts.
     */
    cursor?: province_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` province_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` province_msts.
     */
    skip?: number
    distinct?: Province_mstScalarFieldEnum | Province_mstScalarFieldEnum[]
  }

  /**
   * province_mst create
   */
  export type province_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a province_mst.
     */
    data: XOR<province_mstCreateInput, province_mstUncheckedCreateInput>
  }

  /**
   * province_mst createMany
   */
  export type province_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many province_msts.
     */
    data: province_mstCreateManyInput | province_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * province_mst createManyAndReturn
   */
  export type province_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many province_msts.
     */
    data: province_mstCreateManyInput | province_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * province_mst update
   */
  export type province_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a province_mst.
     */
    data: XOR<province_mstUpdateInput, province_mstUncheckedUpdateInput>
    /**
     * Choose, which province_mst to update.
     */
    where: province_mstWhereUniqueInput
  }

  /**
   * province_mst updateMany
   */
  export type province_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update province_msts.
     */
    data: XOR<province_mstUpdateManyMutationInput, province_mstUncheckedUpdateManyInput>
    /**
     * Filter which province_msts to update
     */
    where?: province_mstWhereInput
  }

  /**
   * province_mst upsert
   */
  export type province_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the province_mst to update in case it exists.
     */
    where: province_mstWhereUniqueInput
    /**
     * In case the province_mst found by the `where` argument doesn't exist, create a new province_mst with this data.
     */
    create: XOR<province_mstCreateInput, province_mstUncheckedCreateInput>
    /**
     * In case the province_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<province_mstUpdateInput, province_mstUncheckedUpdateInput>
  }

  /**
   * province_mst delete
   */
  export type province_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
    /**
     * Filter which province_mst to delete.
     */
    where: province_mstWhereUniqueInput
  }

  /**
   * province_mst deleteMany
   */
  export type province_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which province_msts to delete
     */
    where?: province_mstWhereInput
  }

  /**
   * province_mst without action
   */
  export type province_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the province_mst
     */
    select?: province_mstSelect<ExtArgs> | null
  }


  /**
   * Model apostolates_mst
   */

  export type AggregateApostolates_mst = {
    _count: Apostolates_mstCountAggregateOutputType | null
    _avg: Apostolates_mstAvgAggregateOutputType | null
    _sum: Apostolates_mstSumAggregateOutputType | null
    _min: Apostolates_mstMinAggregateOutputType | null
    _max: Apostolates_mstMaxAggregateOutputType | null
  }

  export type Apostolates_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Apostolates_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Apostolates_mstMinAggregateOutputType = {
    apostolate_code: string | null
    centre_type_code: string | null
    language_code: number | null
    apostolate_name: string | null
    centre_type_name: string | null
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Apostolates_mstMaxAggregateOutputType = {
    apostolate_code: string | null
    centre_type_code: string | null
    language_code: number | null
    apostolate_name: string | null
    centre_type_name: string | null
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Apostolates_mstCountAggregateOutputType = {
    apostolate_code: number
    centre_type_code: number
    language_code: number
    apostolate_name: number
    centre_type_name: number
    date_format: number
    academic_year: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Apostolates_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Apostolates_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Apostolates_mstMinAggregateInputType = {
    apostolate_code?: true
    centre_type_code?: true
    language_code?: true
    apostolate_name?: true
    centre_type_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Apostolates_mstMaxAggregateInputType = {
    apostolate_code?: true
    centre_type_code?: true
    language_code?: true
    apostolate_name?: true
    centre_type_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Apostolates_mstCountAggregateInputType = {
    apostolate_code?: true
    centre_type_code?: true
    language_code?: true
    apostolate_name?: true
    centre_type_name?: true
    date_format?: true
    academic_year?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Apostolates_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apostolates_mst to aggregate.
     */
    where?: apostolates_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apostolates_msts to fetch.
     */
    orderBy?: apostolates_mstOrderByWithRelationInput | apostolates_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: apostolates_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apostolates_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apostolates_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned apostolates_msts
    **/
    _count?: true | Apostolates_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Apostolates_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Apostolates_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Apostolates_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Apostolates_mstMaxAggregateInputType
  }

  export type GetApostolates_mstAggregateType<T extends Apostolates_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateApostolates_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApostolates_mst[P]>
      : GetScalarType<T[P], AggregateApostolates_mst[P]>
  }




  export type apostolates_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apostolates_mstWhereInput
    orderBy?: apostolates_mstOrderByWithAggregationInput | apostolates_mstOrderByWithAggregationInput[]
    by: Apostolates_mstScalarFieldEnum[] | Apostolates_mstScalarFieldEnum
    having?: apostolates_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Apostolates_mstCountAggregateInputType | true
    _avg?: Apostolates_mstAvgAggregateInputType
    _sum?: Apostolates_mstSumAggregateInputType
    _min?: Apostolates_mstMinAggregateInputType
    _max?: Apostolates_mstMaxAggregateInputType
  }

  export type Apostolates_mstGroupByOutputType = {
    apostolate_code: string
    centre_type_code: string
    language_code: number
    apostolate_name: string
    centre_type_name: string
    date_format: string | null
    academic_year: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Apostolates_mstCountAggregateOutputType | null
    _avg: Apostolates_mstAvgAggregateOutputType | null
    _sum: Apostolates_mstSumAggregateOutputType | null
    _min: Apostolates_mstMinAggregateOutputType | null
    _max: Apostolates_mstMaxAggregateOutputType | null
  }

  type GetApostolates_mstGroupByPayload<T extends apostolates_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Apostolates_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Apostolates_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Apostolates_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Apostolates_mstGroupByOutputType[P]>
        }
      >
    >


  export type apostolates_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    apostolate_code?: boolean
    centre_type_code?: boolean
    language_code?: boolean
    apostolate_name?: boolean
    centre_type_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["apostolates_mst"]>

  export type apostolates_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    apostolate_code?: boolean
    centre_type_code?: boolean
    language_code?: boolean
    apostolate_name?: boolean
    centre_type_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["apostolates_mst"]>

  export type apostolates_mstSelectScalar = {
    apostolate_code?: boolean
    centre_type_code?: boolean
    language_code?: boolean
    apostolate_name?: boolean
    centre_type_name?: boolean
    date_format?: boolean
    academic_year?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $apostolates_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "apostolates_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      apostolate_code: string
      centre_type_code: string
      language_code: number
      apostolate_name: string
      centre_type_name: string
      date_format: string | null
      academic_year: string | null
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["apostolates_mst"]>
    composites: {}
  }

  type apostolates_mstGetPayload<S extends boolean | null | undefined | apostolates_mstDefaultArgs> = $Result.GetResult<Prisma.$apostolates_mstPayload, S>

  type apostolates_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<apostolates_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Apostolates_mstCountAggregateInputType | true
    }

  export interface apostolates_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['apostolates_mst'], meta: { name: 'apostolates_mst' } }
    /**
     * Find zero or one Apostolates_mst that matches the filter.
     * @param {apostolates_mstFindUniqueArgs} args - Arguments to find a Apostolates_mst
     * @example
     * // Get one Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends apostolates_mstFindUniqueArgs>(args: SelectSubset<T, apostolates_mstFindUniqueArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Apostolates_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {apostolates_mstFindUniqueOrThrowArgs} args - Arguments to find a Apostolates_mst
     * @example
     * // Get one Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends apostolates_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, apostolates_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Apostolates_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstFindFirstArgs} args - Arguments to find a Apostolates_mst
     * @example
     * // Get one Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends apostolates_mstFindFirstArgs>(args?: SelectSubset<T, apostolates_mstFindFirstArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Apostolates_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstFindFirstOrThrowArgs} args - Arguments to find a Apostolates_mst
     * @example
     * // Get one Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends apostolates_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, apostolates_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Apostolates_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Apostolates_msts
     * const apostolates_msts = await prisma.apostolates_mst.findMany()
     * 
     * // Get first 10 Apostolates_msts
     * const apostolates_msts = await prisma.apostolates_mst.findMany({ take: 10 })
     * 
     * // Only select the `apostolate_code`
     * const apostolates_mstWithApostolate_codeOnly = await prisma.apostolates_mst.findMany({ select: { apostolate_code: true } })
     * 
     */
    findMany<T extends apostolates_mstFindManyArgs>(args?: SelectSubset<T, apostolates_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Apostolates_mst.
     * @param {apostolates_mstCreateArgs} args - Arguments to create a Apostolates_mst.
     * @example
     * // Create one Apostolates_mst
     * const Apostolates_mst = await prisma.apostolates_mst.create({
     *   data: {
     *     // ... data to create a Apostolates_mst
     *   }
     * })
     * 
     */
    create<T extends apostolates_mstCreateArgs>(args: SelectSubset<T, apostolates_mstCreateArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Apostolates_msts.
     * @param {apostolates_mstCreateManyArgs} args - Arguments to create many Apostolates_msts.
     * @example
     * // Create many Apostolates_msts
     * const apostolates_mst = await prisma.apostolates_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends apostolates_mstCreateManyArgs>(args?: SelectSubset<T, apostolates_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Apostolates_msts and returns the data saved in the database.
     * @param {apostolates_mstCreateManyAndReturnArgs} args - Arguments to create many Apostolates_msts.
     * @example
     * // Create many Apostolates_msts
     * const apostolates_mst = await prisma.apostolates_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Apostolates_msts and only return the `apostolate_code`
     * const apostolates_mstWithApostolate_codeOnly = await prisma.apostolates_mst.createManyAndReturn({ 
     *   select: { apostolate_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends apostolates_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, apostolates_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Apostolates_mst.
     * @param {apostolates_mstDeleteArgs} args - Arguments to delete one Apostolates_mst.
     * @example
     * // Delete one Apostolates_mst
     * const Apostolates_mst = await prisma.apostolates_mst.delete({
     *   where: {
     *     // ... filter to delete one Apostolates_mst
     *   }
     * })
     * 
     */
    delete<T extends apostolates_mstDeleteArgs>(args: SelectSubset<T, apostolates_mstDeleteArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Apostolates_mst.
     * @param {apostolates_mstUpdateArgs} args - Arguments to update one Apostolates_mst.
     * @example
     * // Update one Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends apostolates_mstUpdateArgs>(args: SelectSubset<T, apostolates_mstUpdateArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Apostolates_msts.
     * @param {apostolates_mstDeleteManyArgs} args - Arguments to filter Apostolates_msts to delete.
     * @example
     * // Delete a few Apostolates_msts
     * const { count } = await prisma.apostolates_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends apostolates_mstDeleteManyArgs>(args?: SelectSubset<T, apostolates_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apostolates_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Apostolates_msts
     * const apostolates_mst = await prisma.apostolates_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends apostolates_mstUpdateManyArgs>(args: SelectSubset<T, apostolates_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Apostolates_mst.
     * @param {apostolates_mstUpsertArgs} args - Arguments to update or create a Apostolates_mst.
     * @example
     * // Update or create a Apostolates_mst
     * const apostolates_mst = await prisma.apostolates_mst.upsert({
     *   create: {
     *     // ... data to create a Apostolates_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Apostolates_mst we want to update
     *   }
     * })
     */
    upsert<T extends apostolates_mstUpsertArgs>(args: SelectSubset<T, apostolates_mstUpsertArgs<ExtArgs>>): Prisma__apostolates_mstClient<$Result.GetResult<Prisma.$apostolates_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Apostolates_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstCountArgs} args - Arguments to filter Apostolates_msts to count.
     * @example
     * // Count the number of Apostolates_msts
     * const count = await prisma.apostolates_mst.count({
     *   where: {
     *     // ... the filter for the Apostolates_msts we want to count
     *   }
     * })
    **/
    count<T extends apostolates_mstCountArgs>(
      args?: Subset<T, apostolates_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Apostolates_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Apostolates_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Apostolates_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Apostolates_mstAggregateArgs>(args: Subset<T, Apostolates_mstAggregateArgs>): Prisma.PrismaPromise<GetApostolates_mstAggregateType<T>>

    /**
     * Group by Apostolates_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apostolates_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends apostolates_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: apostolates_mstGroupByArgs['orderBy'] }
        : { orderBy?: apostolates_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, apostolates_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApostolates_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the apostolates_mst model
   */
  readonly fields: apostolates_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for apostolates_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__apostolates_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the apostolates_mst model
   */ 
  interface apostolates_mstFieldRefs {
    readonly apostolate_code: FieldRef<"apostolates_mst", 'String'>
    readonly centre_type_code: FieldRef<"apostolates_mst", 'String'>
    readonly language_code: FieldRef<"apostolates_mst", 'Int'>
    readonly apostolate_name: FieldRef<"apostolates_mst", 'String'>
    readonly centre_type_name: FieldRef<"apostolates_mst", 'String'>
    readonly date_format: FieldRef<"apostolates_mst", 'String'>
    readonly academic_year: FieldRef<"apostolates_mst", 'String'>
    readonly concurrency_val: FieldRef<"apostolates_mst", 'Int'>
    readonly created_by: FieldRef<"apostolates_mst", 'String'>
    readonly created_date: FieldRef<"apostolates_mst", 'DateTime'>
    readonly updated_by: FieldRef<"apostolates_mst", 'String'>
    readonly updated_date: FieldRef<"apostolates_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * apostolates_mst findUnique
   */
  export type apostolates_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter, which apostolates_mst to fetch.
     */
    where: apostolates_mstWhereUniqueInput
  }

  /**
   * apostolates_mst findUniqueOrThrow
   */
  export type apostolates_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter, which apostolates_mst to fetch.
     */
    where: apostolates_mstWhereUniqueInput
  }

  /**
   * apostolates_mst findFirst
   */
  export type apostolates_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter, which apostolates_mst to fetch.
     */
    where?: apostolates_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apostolates_msts to fetch.
     */
    orderBy?: apostolates_mstOrderByWithRelationInput | apostolates_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apostolates_msts.
     */
    cursor?: apostolates_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apostolates_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apostolates_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apostolates_msts.
     */
    distinct?: Apostolates_mstScalarFieldEnum | Apostolates_mstScalarFieldEnum[]
  }

  /**
   * apostolates_mst findFirstOrThrow
   */
  export type apostolates_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter, which apostolates_mst to fetch.
     */
    where?: apostolates_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apostolates_msts to fetch.
     */
    orderBy?: apostolates_mstOrderByWithRelationInput | apostolates_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apostolates_msts.
     */
    cursor?: apostolates_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apostolates_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apostolates_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apostolates_msts.
     */
    distinct?: Apostolates_mstScalarFieldEnum | Apostolates_mstScalarFieldEnum[]
  }

  /**
   * apostolates_mst findMany
   */
  export type apostolates_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter, which apostolates_msts to fetch.
     */
    where?: apostolates_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apostolates_msts to fetch.
     */
    orderBy?: apostolates_mstOrderByWithRelationInput | apostolates_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing apostolates_msts.
     */
    cursor?: apostolates_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apostolates_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apostolates_msts.
     */
    skip?: number
    distinct?: Apostolates_mstScalarFieldEnum | Apostolates_mstScalarFieldEnum[]
  }

  /**
   * apostolates_mst create
   */
  export type apostolates_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a apostolates_mst.
     */
    data: XOR<apostolates_mstCreateInput, apostolates_mstUncheckedCreateInput>
  }

  /**
   * apostolates_mst createMany
   */
  export type apostolates_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many apostolates_msts.
     */
    data: apostolates_mstCreateManyInput | apostolates_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * apostolates_mst createManyAndReturn
   */
  export type apostolates_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many apostolates_msts.
     */
    data: apostolates_mstCreateManyInput | apostolates_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * apostolates_mst update
   */
  export type apostolates_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a apostolates_mst.
     */
    data: XOR<apostolates_mstUpdateInput, apostolates_mstUncheckedUpdateInput>
    /**
     * Choose, which apostolates_mst to update.
     */
    where: apostolates_mstWhereUniqueInput
  }

  /**
   * apostolates_mst updateMany
   */
  export type apostolates_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update apostolates_msts.
     */
    data: XOR<apostolates_mstUpdateManyMutationInput, apostolates_mstUncheckedUpdateManyInput>
    /**
     * Filter which apostolates_msts to update
     */
    where?: apostolates_mstWhereInput
  }

  /**
   * apostolates_mst upsert
   */
  export type apostolates_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the apostolates_mst to update in case it exists.
     */
    where: apostolates_mstWhereUniqueInput
    /**
     * In case the apostolates_mst found by the `where` argument doesn't exist, create a new apostolates_mst with this data.
     */
    create: XOR<apostolates_mstCreateInput, apostolates_mstUncheckedCreateInput>
    /**
     * In case the apostolates_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<apostolates_mstUpdateInput, apostolates_mstUncheckedUpdateInput>
  }

  /**
   * apostolates_mst delete
   */
  export type apostolates_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
    /**
     * Filter which apostolates_mst to delete.
     */
    where: apostolates_mstWhereUniqueInput
  }

  /**
   * apostolates_mst deleteMany
   */
  export type apostolates_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apostolates_msts to delete
     */
    where?: apostolates_mstWhereInput
  }

  /**
   * apostolates_mst without action
   */
  export type apostolates_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apostolates_mst
     */
    select?: apostolates_mstSelect<ExtArgs> | null
  }


  /**
   * Model users_mst
   */

  export type AggregateUsers_mst = {
    _count: Users_mstCountAggregateOutputType | null
    _avg: Users_mstAvgAggregateOutputType | null
    _sum: Users_mstSumAggregateOutputType | null
    _min: Users_mstMinAggregateOutputType | null
    _max: Users_mstMaxAggregateOutputType | null
  }

  export type Users_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Users_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Users_mstMinAggregateOutputType = {
    province_code: string | null
    user_id: string | null
    language_code: number | null
    first_name: string | null
    last_name: string | null
    password: string | null
    user_type_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Users_mstMaxAggregateOutputType = {
    province_code: string | null
    user_id: string | null
    language_code: number | null
    first_name: string | null
    last_name: string | null
    password: string | null
    user_type_code: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Users_mstCountAggregateOutputType = {
    province_code: number
    user_id: number
    language_code: number
    first_name: number
    last_name: number
    password: number
    user_type_code: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Users_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Users_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Users_mstMinAggregateInputType = {
    province_code?: true
    user_id?: true
    language_code?: true
    first_name?: true
    last_name?: true
    password?: true
    user_type_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Users_mstMaxAggregateInputType = {
    province_code?: true
    user_id?: true
    language_code?: true
    first_name?: true
    last_name?: true
    password?: true
    user_type_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Users_mstCountAggregateInputType = {
    province_code?: true
    user_id?: true
    language_code?: true
    first_name?: true
    last_name?: true
    password?: true
    user_type_code?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Users_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_mst to aggregate.
     */
    where?: users_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_msts to fetch.
     */
    orderBy?: users_mstOrderByWithRelationInput | users_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: users_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users_msts
    **/
    _count?: true | Users_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Users_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Users_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Users_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Users_mstMaxAggregateInputType
  }

  export type GetUsers_mstAggregateType<T extends Users_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers_mst[P]>
      : GetScalarType<T[P], AggregateUsers_mst[P]>
  }




  export type users_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: users_mstWhereInput
    orderBy?: users_mstOrderByWithAggregationInput | users_mstOrderByWithAggregationInput[]
    by: Users_mstScalarFieldEnum[] | Users_mstScalarFieldEnum
    having?: users_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Users_mstCountAggregateInputType | true
    _avg?: Users_mstAvgAggregateInputType
    _sum?: Users_mstSumAggregateInputType
    _min?: Users_mstMinAggregateInputType
    _max?: Users_mstMaxAggregateInputType
  }

  export type Users_mstGroupByOutputType = {
    province_code: string
    user_id: string
    language_code: number
    first_name: string
    last_name: string | null
    password: string
    user_type_code: string
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Users_mstCountAggregateOutputType | null
    _avg: Users_mstAvgAggregateOutputType | null
    _sum: Users_mstSumAggregateOutputType | null
    _min: Users_mstMinAggregateOutputType | null
    _max: Users_mstMaxAggregateOutputType | null
  }

  type GetUsers_mstGroupByPayload<T extends users_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Users_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Users_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Users_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Users_mstGroupByOutputType[P]>
        }
      >
    >


  export type users_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    user_id?: boolean
    language_code?: boolean
    first_name?: boolean
    last_name?: boolean
    password?: boolean
    user_type_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["users_mst"]>

  export type users_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    user_id?: boolean
    language_code?: boolean
    first_name?: boolean
    last_name?: boolean
    password?: boolean
    user_type_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["users_mst"]>

  export type users_mstSelectScalar = {
    province_code?: boolean
    user_id?: boolean
    language_code?: boolean
    first_name?: boolean
    last_name?: boolean
    password?: boolean
    user_type_code?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $users_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      province_code: string
      user_id: string
      language_code: number
      first_name: string
      last_name: string | null
      password: string
      user_type_code: string
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["users_mst"]>
    composites: {}
  }

  type users_mstGetPayload<S extends boolean | null | undefined | users_mstDefaultArgs> = $Result.GetResult<Prisma.$users_mstPayload, S>

  type users_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<users_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Users_mstCountAggregateInputType | true
    }

  export interface users_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users_mst'], meta: { name: 'users_mst' } }
    /**
     * Find zero or one Users_mst that matches the filter.
     * @param {users_mstFindUniqueArgs} args - Arguments to find a Users_mst
     * @example
     * // Get one Users_mst
     * const users_mst = await prisma.users_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends users_mstFindUniqueArgs>(args: SelectSubset<T, users_mstFindUniqueArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Users_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {users_mstFindUniqueOrThrowArgs} args - Arguments to find a Users_mst
     * @example
     * // Get one Users_mst
     * const users_mst = await prisma.users_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends users_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, users_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Users_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstFindFirstArgs} args - Arguments to find a Users_mst
     * @example
     * // Get one Users_mst
     * const users_mst = await prisma.users_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends users_mstFindFirstArgs>(args?: SelectSubset<T, users_mstFindFirstArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Users_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstFindFirstOrThrowArgs} args - Arguments to find a Users_mst
     * @example
     * // Get one Users_mst
     * const users_mst = await prisma.users_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends users_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, users_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users_msts
     * const users_msts = await prisma.users_mst.findMany()
     * 
     * // Get first 10 Users_msts
     * const users_msts = await prisma.users_mst.findMany({ take: 10 })
     * 
     * // Only select the `province_code`
     * const users_mstWithProvince_codeOnly = await prisma.users_mst.findMany({ select: { province_code: true } })
     * 
     */
    findMany<T extends users_mstFindManyArgs>(args?: SelectSubset<T, users_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Users_mst.
     * @param {users_mstCreateArgs} args - Arguments to create a Users_mst.
     * @example
     * // Create one Users_mst
     * const Users_mst = await prisma.users_mst.create({
     *   data: {
     *     // ... data to create a Users_mst
     *   }
     * })
     * 
     */
    create<T extends users_mstCreateArgs>(args: SelectSubset<T, users_mstCreateArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users_msts.
     * @param {users_mstCreateManyArgs} args - Arguments to create many Users_msts.
     * @example
     * // Create many Users_msts
     * const users_mst = await prisma.users_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends users_mstCreateManyArgs>(args?: SelectSubset<T, users_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users_msts and returns the data saved in the database.
     * @param {users_mstCreateManyAndReturnArgs} args - Arguments to create many Users_msts.
     * @example
     * // Create many Users_msts
     * const users_mst = await prisma.users_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users_msts and only return the `province_code`
     * const users_mstWithProvince_codeOnly = await prisma.users_mst.createManyAndReturn({ 
     *   select: { province_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends users_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, users_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Users_mst.
     * @param {users_mstDeleteArgs} args - Arguments to delete one Users_mst.
     * @example
     * // Delete one Users_mst
     * const Users_mst = await prisma.users_mst.delete({
     *   where: {
     *     // ... filter to delete one Users_mst
     *   }
     * })
     * 
     */
    delete<T extends users_mstDeleteArgs>(args: SelectSubset<T, users_mstDeleteArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Users_mst.
     * @param {users_mstUpdateArgs} args - Arguments to update one Users_mst.
     * @example
     * // Update one Users_mst
     * const users_mst = await prisma.users_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends users_mstUpdateArgs>(args: SelectSubset<T, users_mstUpdateArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users_msts.
     * @param {users_mstDeleteManyArgs} args - Arguments to filter Users_msts to delete.
     * @example
     * // Delete a few Users_msts
     * const { count } = await prisma.users_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends users_mstDeleteManyArgs>(args?: SelectSubset<T, users_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users_msts
     * const users_mst = await prisma.users_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends users_mstUpdateManyArgs>(args: SelectSubset<T, users_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users_mst.
     * @param {users_mstUpsertArgs} args - Arguments to update or create a Users_mst.
     * @example
     * // Update or create a Users_mst
     * const users_mst = await prisma.users_mst.upsert({
     *   create: {
     *     // ... data to create a Users_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users_mst we want to update
     *   }
     * })
     */
    upsert<T extends users_mstUpsertArgs>(args: SelectSubset<T, users_mstUpsertArgs<ExtArgs>>): Prisma__users_mstClient<$Result.GetResult<Prisma.$users_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstCountArgs} args - Arguments to filter Users_msts to count.
     * @example
     * // Count the number of Users_msts
     * const count = await prisma.users_mst.count({
     *   where: {
     *     // ... the filter for the Users_msts we want to count
     *   }
     * })
    **/
    count<T extends users_mstCountArgs>(
      args?: Subset<T, users_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Users_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Users_mstAggregateArgs>(args: Subset<T, Users_mstAggregateArgs>): Prisma.PrismaPromise<GetUsers_mstAggregateType<T>>

    /**
     * Group by Users_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends users_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: users_mstGroupByArgs['orderBy'] }
        : { orderBy?: users_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, users_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsers_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users_mst model
   */
  readonly fields: users_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__users_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users_mst model
   */ 
  interface users_mstFieldRefs {
    readonly province_code: FieldRef<"users_mst", 'String'>
    readonly user_id: FieldRef<"users_mst", 'String'>
    readonly language_code: FieldRef<"users_mst", 'Int'>
    readonly first_name: FieldRef<"users_mst", 'String'>
    readonly last_name: FieldRef<"users_mst", 'String'>
    readonly password: FieldRef<"users_mst", 'String'>
    readonly user_type_code: FieldRef<"users_mst", 'String'>
    readonly concurrency_val: FieldRef<"users_mst", 'Int'>
    readonly created_by: FieldRef<"users_mst", 'String'>
    readonly created_date: FieldRef<"users_mst", 'DateTime'>
    readonly updated_by: FieldRef<"users_mst", 'String'>
    readonly updated_date: FieldRef<"users_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users_mst findUnique
   */
  export type users_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter, which users_mst to fetch.
     */
    where: users_mstWhereUniqueInput
  }

  /**
   * users_mst findUniqueOrThrow
   */
  export type users_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter, which users_mst to fetch.
     */
    where: users_mstWhereUniqueInput
  }

  /**
   * users_mst findFirst
   */
  export type users_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter, which users_mst to fetch.
     */
    where?: users_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_msts to fetch.
     */
    orderBy?: users_mstOrderByWithRelationInput | users_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_msts.
     */
    cursor?: users_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_msts.
     */
    distinct?: Users_mstScalarFieldEnum | Users_mstScalarFieldEnum[]
  }

  /**
   * users_mst findFirstOrThrow
   */
  export type users_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter, which users_mst to fetch.
     */
    where?: users_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_msts to fetch.
     */
    orderBy?: users_mstOrderByWithRelationInput | users_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_msts.
     */
    cursor?: users_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_msts.
     */
    distinct?: Users_mstScalarFieldEnum | Users_mstScalarFieldEnum[]
  }

  /**
   * users_mst findMany
   */
  export type users_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter, which users_msts to fetch.
     */
    where?: users_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_msts to fetch.
     */
    orderBy?: users_mstOrderByWithRelationInput | users_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users_msts.
     */
    cursor?: users_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_msts.
     */
    skip?: number
    distinct?: Users_mstScalarFieldEnum | Users_mstScalarFieldEnum[]
  }

  /**
   * users_mst create
   */
  export type users_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a users_mst.
     */
    data: XOR<users_mstCreateInput, users_mstUncheckedCreateInput>
  }

  /**
   * users_mst createMany
   */
  export type users_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users_msts.
     */
    data: users_mstCreateManyInput | users_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users_mst createManyAndReturn
   */
  export type users_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many users_msts.
     */
    data: users_mstCreateManyInput | users_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users_mst update
   */
  export type users_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a users_mst.
     */
    data: XOR<users_mstUpdateInput, users_mstUncheckedUpdateInput>
    /**
     * Choose, which users_mst to update.
     */
    where: users_mstWhereUniqueInput
  }

  /**
   * users_mst updateMany
   */
  export type users_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users_msts.
     */
    data: XOR<users_mstUpdateManyMutationInput, users_mstUncheckedUpdateManyInput>
    /**
     * Filter which users_msts to update
     */
    where?: users_mstWhereInput
  }

  /**
   * users_mst upsert
   */
  export type users_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the users_mst to update in case it exists.
     */
    where: users_mstWhereUniqueInput
    /**
     * In case the users_mst found by the `where` argument doesn't exist, create a new users_mst with this data.
     */
    create: XOR<users_mstCreateInput, users_mstUncheckedCreateInput>
    /**
     * In case the users_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<users_mstUpdateInput, users_mstUncheckedUpdateInput>
  }

  /**
   * users_mst delete
   */
  export type users_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
    /**
     * Filter which users_mst to delete.
     */
    where: users_mstWhereUniqueInput
  }

  /**
   * users_mst deleteMany
   */
  export type users_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_msts to delete
     */
    where?: users_mstWhereInput
  }

  /**
   * users_mst without action
   */
  export type users_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_mst
     */
    select?: users_mstSelect<ExtArgs> | null
  }


  /**
   * Model division_setup_mst
   */

  export type AggregateDivision_setup_mst = {
    _count: Division_setup_mstCountAggregateOutputType | null
    _avg: Division_setup_mstAvgAggregateOutputType | null
    _sum: Division_setup_mstSumAggregateOutputType | null
    _min: Division_setup_mstMinAggregateOutputType | null
    _max: Division_setup_mstMaxAggregateOutputType | null
  }

  export type Division_setup_mstAvgAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Division_setup_mstSumAggregateOutputType = {
    language_code: number | null
    concurrency_val: number | null
  }

  export type Division_setup_mstMinAggregateOutputType = {
    province_code: string | null
    division_type_code: string | null
    division_code: string | null
    language_code: number | null
    division_name: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Division_setup_mstMaxAggregateOutputType = {
    province_code: string | null
    division_type_code: string | null
    division_code: string | null
    language_code: number | null
    division_name: string | null
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
  }

  export type Division_setup_mstCountAggregateOutputType = {
    province_code: number
    division_type_code: number
    division_code: number
    language_code: number
    division_name: number
    concurrency_val: number
    created_by: number
    created_date: number
    updated_by: number
    updated_date: number
    _all: number
  }


  export type Division_setup_mstAvgAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Division_setup_mstSumAggregateInputType = {
    language_code?: true
    concurrency_val?: true
  }

  export type Division_setup_mstMinAggregateInputType = {
    province_code?: true
    division_type_code?: true
    division_code?: true
    language_code?: true
    division_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Division_setup_mstMaxAggregateInputType = {
    province_code?: true
    division_type_code?: true
    division_code?: true
    language_code?: true
    division_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
  }

  export type Division_setup_mstCountAggregateInputType = {
    province_code?: true
    division_type_code?: true
    division_code?: true
    language_code?: true
    division_name?: true
    concurrency_val?: true
    created_by?: true
    created_date?: true
    updated_by?: true
    updated_date?: true
    _all?: true
  }

  export type Division_setup_mstAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which division_setup_mst to aggregate.
     */
    where?: division_setup_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of division_setup_msts to fetch.
     */
    orderBy?: division_setup_mstOrderByWithRelationInput | division_setup_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: division_setup_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` division_setup_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` division_setup_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned division_setup_msts
    **/
    _count?: true | Division_setup_mstCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Division_setup_mstAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Division_setup_mstSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Division_setup_mstMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Division_setup_mstMaxAggregateInputType
  }

  export type GetDivision_setup_mstAggregateType<T extends Division_setup_mstAggregateArgs> = {
        [P in keyof T & keyof AggregateDivision_setup_mst]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDivision_setup_mst[P]>
      : GetScalarType<T[P], AggregateDivision_setup_mst[P]>
  }




  export type division_setup_mstGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: division_setup_mstWhereInput
    orderBy?: division_setup_mstOrderByWithAggregationInput | division_setup_mstOrderByWithAggregationInput[]
    by: Division_setup_mstScalarFieldEnum[] | Division_setup_mstScalarFieldEnum
    having?: division_setup_mstScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Division_setup_mstCountAggregateInputType | true
    _avg?: Division_setup_mstAvgAggregateInputType
    _sum?: Division_setup_mstSumAggregateInputType
    _min?: Division_setup_mstMinAggregateInputType
    _max?: Division_setup_mstMaxAggregateInputType
  }

  export type Division_setup_mstGroupByOutputType = {
    province_code: string
    division_type_code: string
    division_code: string
    language_code: number
    division_name: string
    concurrency_val: number | null
    created_by: string | null
    created_date: Date | null
    updated_by: string | null
    updated_date: Date | null
    _count: Division_setup_mstCountAggregateOutputType | null
    _avg: Division_setup_mstAvgAggregateOutputType | null
    _sum: Division_setup_mstSumAggregateOutputType | null
    _min: Division_setup_mstMinAggregateOutputType | null
    _max: Division_setup_mstMaxAggregateOutputType | null
  }

  type GetDivision_setup_mstGroupByPayload<T extends division_setup_mstGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Division_setup_mstGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Division_setup_mstGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Division_setup_mstGroupByOutputType[P]>
            : GetScalarType<T[P], Division_setup_mstGroupByOutputType[P]>
        }
      >
    >


  export type division_setup_mstSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    division_type_code?: boolean
    division_code?: boolean
    language_code?: boolean
    division_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["division_setup_mst"]>

  export type division_setup_mstSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    province_code?: boolean
    division_type_code?: boolean
    division_code?: boolean
    language_code?: boolean
    division_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }, ExtArgs["result"]["division_setup_mst"]>

  export type division_setup_mstSelectScalar = {
    province_code?: boolean
    division_type_code?: boolean
    division_code?: boolean
    language_code?: boolean
    division_name?: boolean
    concurrency_val?: boolean
    created_by?: boolean
    created_date?: boolean
    updated_by?: boolean
    updated_date?: boolean
  }


  export type $division_setup_mstPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "division_setup_mst"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      province_code: string
      division_type_code: string
      division_code: string
      language_code: number
      division_name: string
      concurrency_val: number | null
      created_by: string | null
      created_date: Date | null
      updated_by: string | null
      updated_date: Date | null
    }, ExtArgs["result"]["division_setup_mst"]>
    composites: {}
  }

  type division_setup_mstGetPayload<S extends boolean | null | undefined | division_setup_mstDefaultArgs> = $Result.GetResult<Prisma.$division_setup_mstPayload, S>

  type division_setup_mstCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<division_setup_mstFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Division_setup_mstCountAggregateInputType | true
    }

  export interface division_setup_mstDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['division_setup_mst'], meta: { name: 'division_setup_mst' } }
    /**
     * Find zero or one Division_setup_mst that matches the filter.
     * @param {division_setup_mstFindUniqueArgs} args - Arguments to find a Division_setup_mst
     * @example
     * // Get one Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends division_setup_mstFindUniqueArgs>(args: SelectSubset<T, division_setup_mstFindUniqueArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Division_setup_mst that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {division_setup_mstFindUniqueOrThrowArgs} args - Arguments to find a Division_setup_mst
     * @example
     * // Get one Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends division_setup_mstFindUniqueOrThrowArgs>(args: SelectSubset<T, division_setup_mstFindUniqueOrThrowArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Division_setup_mst that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstFindFirstArgs} args - Arguments to find a Division_setup_mst
     * @example
     * // Get one Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends division_setup_mstFindFirstArgs>(args?: SelectSubset<T, division_setup_mstFindFirstArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Division_setup_mst that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstFindFirstOrThrowArgs} args - Arguments to find a Division_setup_mst
     * @example
     * // Get one Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends division_setup_mstFindFirstOrThrowArgs>(args?: SelectSubset<T, division_setup_mstFindFirstOrThrowArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Division_setup_msts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Division_setup_msts
     * const division_setup_msts = await prisma.division_setup_mst.findMany()
     * 
     * // Get first 10 Division_setup_msts
     * const division_setup_msts = await prisma.division_setup_mst.findMany({ take: 10 })
     * 
     * // Only select the `province_code`
     * const division_setup_mstWithProvince_codeOnly = await prisma.division_setup_mst.findMany({ select: { province_code: true } })
     * 
     */
    findMany<T extends division_setup_mstFindManyArgs>(args?: SelectSubset<T, division_setup_mstFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Division_setup_mst.
     * @param {division_setup_mstCreateArgs} args - Arguments to create a Division_setup_mst.
     * @example
     * // Create one Division_setup_mst
     * const Division_setup_mst = await prisma.division_setup_mst.create({
     *   data: {
     *     // ... data to create a Division_setup_mst
     *   }
     * })
     * 
     */
    create<T extends division_setup_mstCreateArgs>(args: SelectSubset<T, division_setup_mstCreateArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Division_setup_msts.
     * @param {division_setup_mstCreateManyArgs} args - Arguments to create many Division_setup_msts.
     * @example
     * // Create many Division_setup_msts
     * const division_setup_mst = await prisma.division_setup_mst.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends division_setup_mstCreateManyArgs>(args?: SelectSubset<T, division_setup_mstCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Division_setup_msts and returns the data saved in the database.
     * @param {division_setup_mstCreateManyAndReturnArgs} args - Arguments to create many Division_setup_msts.
     * @example
     * // Create many Division_setup_msts
     * const division_setup_mst = await prisma.division_setup_mst.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Division_setup_msts and only return the `province_code`
     * const division_setup_mstWithProvince_codeOnly = await prisma.division_setup_mst.createManyAndReturn({ 
     *   select: { province_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends division_setup_mstCreateManyAndReturnArgs>(args?: SelectSubset<T, division_setup_mstCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Division_setup_mst.
     * @param {division_setup_mstDeleteArgs} args - Arguments to delete one Division_setup_mst.
     * @example
     * // Delete one Division_setup_mst
     * const Division_setup_mst = await prisma.division_setup_mst.delete({
     *   where: {
     *     // ... filter to delete one Division_setup_mst
     *   }
     * })
     * 
     */
    delete<T extends division_setup_mstDeleteArgs>(args: SelectSubset<T, division_setup_mstDeleteArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Division_setup_mst.
     * @param {division_setup_mstUpdateArgs} args - Arguments to update one Division_setup_mst.
     * @example
     * // Update one Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends division_setup_mstUpdateArgs>(args: SelectSubset<T, division_setup_mstUpdateArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Division_setup_msts.
     * @param {division_setup_mstDeleteManyArgs} args - Arguments to filter Division_setup_msts to delete.
     * @example
     * // Delete a few Division_setup_msts
     * const { count } = await prisma.division_setup_mst.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends division_setup_mstDeleteManyArgs>(args?: SelectSubset<T, division_setup_mstDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Division_setup_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Division_setup_msts
     * const division_setup_mst = await prisma.division_setup_mst.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends division_setup_mstUpdateManyArgs>(args: SelectSubset<T, division_setup_mstUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Division_setup_mst.
     * @param {division_setup_mstUpsertArgs} args - Arguments to update or create a Division_setup_mst.
     * @example
     * // Update or create a Division_setup_mst
     * const division_setup_mst = await prisma.division_setup_mst.upsert({
     *   create: {
     *     // ... data to create a Division_setup_mst
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Division_setup_mst we want to update
     *   }
     * })
     */
    upsert<T extends division_setup_mstUpsertArgs>(args: SelectSubset<T, division_setup_mstUpsertArgs<ExtArgs>>): Prisma__division_setup_mstClient<$Result.GetResult<Prisma.$division_setup_mstPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Division_setup_msts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstCountArgs} args - Arguments to filter Division_setup_msts to count.
     * @example
     * // Count the number of Division_setup_msts
     * const count = await prisma.division_setup_mst.count({
     *   where: {
     *     // ... the filter for the Division_setup_msts we want to count
     *   }
     * })
    **/
    count<T extends division_setup_mstCountArgs>(
      args?: Subset<T, division_setup_mstCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Division_setup_mstCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Division_setup_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Division_setup_mstAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Division_setup_mstAggregateArgs>(args: Subset<T, Division_setup_mstAggregateArgs>): Prisma.PrismaPromise<GetDivision_setup_mstAggregateType<T>>

    /**
     * Group by Division_setup_mst.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {division_setup_mstGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends division_setup_mstGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: division_setup_mstGroupByArgs['orderBy'] }
        : { orderBy?: division_setup_mstGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, division_setup_mstGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDivision_setup_mstGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the division_setup_mst model
   */
  readonly fields: division_setup_mstFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for division_setup_mst.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__division_setup_mstClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the division_setup_mst model
   */ 
  interface division_setup_mstFieldRefs {
    readonly province_code: FieldRef<"division_setup_mst", 'String'>
    readonly division_type_code: FieldRef<"division_setup_mst", 'String'>
    readonly division_code: FieldRef<"division_setup_mst", 'String'>
    readonly language_code: FieldRef<"division_setup_mst", 'Int'>
    readonly division_name: FieldRef<"division_setup_mst", 'String'>
    readonly concurrency_val: FieldRef<"division_setup_mst", 'Int'>
    readonly created_by: FieldRef<"division_setup_mst", 'String'>
    readonly created_date: FieldRef<"division_setup_mst", 'DateTime'>
    readonly updated_by: FieldRef<"division_setup_mst", 'String'>
    readonly updated_date: FieldRef<"division_setup_mst", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * division_setup_mst findUnique
   */
  export type division_setup_mstFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter, which division_setup_mst to fetch.
     */
    where: division_setup_mstWhereUniqueInput
  }

  /**
   * division_setup_mst findUniqueOrThrow
   */
  export type division_setup_mstFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter, which division_setup_mst to fetch.
     */
    where: division_setup_mstWhereUniqueInput
  }

  /**
   * division_setup_mst findFirst
   */
  export type division_setup_mstFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter, which division_setup_mst to fetch.
     */
    where?: division_setup_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of division_setup_msts to fetch.
     */
    orderBy?: division_setup_mstOrderByWithRelationInput | division_setup_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for division_setup_msts.
     */
    cursor?: division_setup_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` division_setup_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` division_setup_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of division_setup_msts.
     */
    distinct?: Division_setup_mstScalarFieldEnum | Division_setup_mstScalarFieldEnum[]
  }

  /**
   * division_setup_mst findFirstOrThrow
   */
  export type division_setup_mstFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter, which division_setup_mst to fetch.
     */
    where?: division_setup_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of division_setup_msts to fetch.
     */
    orderBy?: division_setup_mstOrderByWithRelationInput | division_setup_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for division_setup_msts.
     */
    cursor?: division_setup_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` division_setup_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` division_setup_msts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of division_setup_msts.
     */
    distinct?: Division_setup_mstScalarFieldEnum | Division_setup_mstScalarFieldEnum[]
  }

  /**
   * division_setup_mst findMany
   */
  export type division_setup_mstFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter, which division_setup_msts to fetch.
     */
    where?: division_setup_mstWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of division_setup_msts to fetch.
     */
    orderBy?: division_setup_mstOrderByWithRelationInput | division_setup_mstOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing division_setup_msts.
     */
    cursor?: division_setup_mstWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` division_setup_msts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` division_setup_msts.
     */
    skip?: number
    distinct?: Division_setup_mstScalarFieldEnum | Division_setup_mstScalarFieldEnum[]
  }

  /**
   * division_setup_mst create
   */
  export type division_setup_mstCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * The data needed to create a division_setup_mst.
     */
    data: XOR<division_setup_mstCreateInput, division_setup_mstUncheckedCreateInput>
  }

  /**
   * division_setup_mst createMany
   */
  export type division_setup_mstCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many division_setup_msts.
     */
    data: division_setup_mstCreateManyInput | division_setup_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * division_setup_mst createManyAndReturn
   */
  export type division_setup_mstCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many division_setup_msts.
     */
    data: division_setup_mstCreateManyInput | division_setup_mstCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * division_setup_mst update
   */
  export type division_setup_mstUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * The data needed to update a division_setup_mst.
     */
    data: XOR<division_setup_mstUpdateInput, division_setup_mstUncheckedUpdateInput>
    /**
     * Choose, which division_setup_mst to update.
     */
    where: division_setup_mstWhereUniqueInput
  }

  /**
   * division_setup_mst updateMany
   */
  export type division_setup_mstUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update division_setup_msts.
     */
    data: XOR<division_setup_mstUpdateManyMutationInput, division_setup_mstUncheckedUpdateManyInput>
    /**
     * Filter which division_setup_msts to update
     */
    where?: division_setup_mstWhereInput
  }

  /**
   * division_setup_mst upsert
   */
  export type division_setup_mstUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * The filter to search for the division_setup_mst to update in case it exists.
     */
    where: division_setup_mstWhereUniqueInput
    /**
     * In case the division_setup_mst found by the `where` argument doesn't exist, create a new division_setup_mst with this data.
     */
    create: XOR<division_setup_mstCreateInput, division_setup_mstUncheckedCreateInput>
    /**
     * In case the division_setup_mst was found with the provided `where` argument, update it with this data.
     */
    update: XOR<division_setup_mstUpdateInput, division_setup_mstUncheckedUpdateInput>
  }

  /**
   * division_setup_mst delete
   */
  export type division_setup_mstDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
    /**
     * Filter which division_setup_mst to delete.
     */
    where: division_setup_mstWhereUniqueInput
  }

  /**
   * division_setup_mst deleteMany
   */
  export type division_setup_mstDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which division_setup_msts to delete
     */
    where?: division_setup_mstWhereInput
  }

  /**
   * division_setup_mst without action
   */
  export type division_setup_mstDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the division_setup_mst
     */
    select?: division_setup_mstSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Metadata_mstScalarFieldEnum: {
    screen_code: 'screen_code',
    meta_code: 'meta_code',
    screen_name: 'screen_name',
    meta_code_name: 'meta_code_name'
  };

  export type Metadata_mstScalarFieldEnum = (typeof Metadata_mstScalarFieldEnum)[keyof typeof Metadata_mstScalarFieldEnum]


  export const Quickcode_mstScalarFieldEnum: {
    quick_code_type: 'quick_code_type',
    quick_code: 'quick_code',
    language_code: 'language_code',
    quickcode_name: 'quickcode_name',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Quickcode_mstScalarFieldEnum = (typeof Quickcode_mstScalarFieldEnum)[keyof typeof Quickcode_mstScalarFieldEnum]


  export const Country_mstScalarFieldEnum: {
    country_code: 'country_code',
    language_code: 'language_code',
    country_name: 'country_name',
    nationality: 'nationality',
    ISD_code: 'ISD_code',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Country_mstScalarFieldEnum = (typeof Country_mstScalarFieldEnum)[keyof typeof Country_mstScalarFieldEnum]


  export const State_mstScalarFieldEnum: {
    state_code: 'state_code',
    country_code: 'country_code',
    language_code: 'language_code',
    state_name: 'state_name',
    ISD_code: 'ISD_code',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type State_mstScalarFieldEnum = (typeof State_mstScalarFieldEnum)[keyof typeof State_mstScalarFieldEnum]


  export const Province_mstScalarFieldEnum: {
    province_code: 'province_code',
    country_code: 'country_code',
    language_code: 'language_code',
    province_name: 'province_name',
    short_name: 'short_name',
    date_format: 'date_format',
    academic_year: 'academic_year',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Province_mstScalarFieldEnum = (typeof Province_mstScalarFieldEnum)[keyof typeof Province_mstScalarFieldEnum]


  export const Apostolates_mstScalarFieldEnum: {
    apostolate_code: 'apostolate_code',
    centre_type_code: 'centre_type_code',
    language_code: 'language_code',
    apostolate_name: 'apostolate_name',
    centre_type_name: 'centre_type_name',
    date_format: 'date_format',
    academic_year: 'academic_year',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Apostolates_mstScalarFieldEnum = (typeof Apostolates_mstScalarFieldEnum)[keyof typeof Apostolates_mstScalarFieldEnum]


  export const Users_mstScalarFieldEnum: {
    province_code: 'province_code',
    user_id: 'user_id',
    language_code: 'language_code',
    first_name: 'first_name',
    last_name: 'last_name',
    password: 'password',
    user_type_code: 'user_type_code',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Users_mstScalarFieldEnum = (typeof Users_mstScalarFieldEnum)[keyof typeof Users_mstScalarFieldEnum]


  export const Division_setup_mstScalarFieldEnum: {
    province_code: 'province_code',
    division_type_code: 'division_type_code',
    division_code: 'division_code',
    language_code: 'language_code',
    division_name: 'division_name',
    concurrency_val: 'concurrency_val',
    created_by: 'created_by',
    created_date: 'created_date',
    updated_by: 'updated_by',
    updated_date: 'updated_date'
  };

  export type Division_setup_mstScalarFieldEnum = (typeof Division_setup_mstScalarFieldEnum)[keyof typeof Division_setup_mstScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type metadata_mstWhereInput = {
    AND?: metadata_mstWhereInput | metadata_mstWhereInput[]
    OR?: metadata_mstWhereInput[]
    NOT?: metadata_mstWhereInput | metadata_mstWhereInput[]
    screen_code?: StringFilter<"metadata_mst"> | string
    meta_code?: StringFilter<"metadata_mst"> | string
    screen_name?: StringFilter<"metadata_mst"> | string
    meta_code_name?: StringFilter<"metadata_mst"> | string
  }

  export type metadata_mstOrderByWithRelationInput = {
    screen_code?: SortOrder
    meta_code?: SortOrder
    screen_name?: SortOrder
    meta_code_name?: SortOrder
  }

  export type metadata_mstWhereUniqueInput = Prisma.AtLeast<{
    screen_code_meta_code?: metadata_mstScreen_codeMeta_codeCompoundUniqueInput
    AND?: metadata_mstWhereInput | metadata_mstWhereInput[]
    OR?: metadata_mstWhereInput[]
    NOT?: metadata_mstWhereInput | metadata_mstWhereInput[]
    screen_code?: StringFilter<"metadata_mst"> | string
    meta_code?: StringFilter<"metadata_mst"> | string
    screen_name?: StringFilter<"metadata_mst"> | string
    meta_code_name?: StringFilter<"metadata_mst"> | string
  }, "screen_code_meta_code">

  export type metadata_mstOrderByWithAggregationInput = {
    screen_code?: SortOrder
    meta_code?: SortOrder
    screen_name?: SortOrder
    meta_code_name?: SortOrder
    _count?: metadata_mstCountOrderByAggregateInput
    _max?: metadata_mstMaxOrderByAggregateInput
    _min?: metadata_mstMinOrderByAggregateInput
  }

  export type metadata_mstScalarWhereWithAggregatesInput = {
    AND?: metadata_mstScalarWhereWithAggregatesInput | metadata_mstScalarWhereWithAggregatesInput[]
    OR?: metadata_mstScalarWhereWithAggregatesInput[]
    NOT?: metadata_mstScalarWhereWithAggregatesInput | metadata_mstScalarWhereWithAggregatesInput[]
    screen_code?: StringWithAggregatesFilter<"metadata_mst"> | string
    meta_code?: StringWithAggregatesFilter<"metadata_mst"> | string
    screen_name?: StringWithAggregatesFilter<"metadata_mst"> | string
    meta_code_name?: StringWithAggregatesFilter<"metadata_mst"> | string
  }

  export type quickcode_mstWhereInput = {
    AND?: quickcode_mstWhereInput | quickcode_mstWhereInput[]
    OR?: quickcode_mstWhereInput[]
    NOT?: quickcode_mstWhereInput | quickcode_mstWhereInput[]
    quick_code_type?: StringFilter<"quickcode_mst"> | string
    quick_code?: StringFilter<"quickcode_mst"> | string
    language_code?: IntFilter<"quickcode_mst"> | number
    quickcode_name?: StringFilter<"quickcode_mst"> | string
    concurrency_val?: IntNullableFilter<"quickcode_mst"> | number | null
    created_by?: StringNullableFilter<"quickcode_mst"> | string | null
    created_date?: DateTimeNullableFilter<"quickcode_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"quickcode_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"quickcode_mst"> | Date | string | null
  }

  export type quickcode_mstOrderByWithRelationInput = {
    quick_code_type?: SortOrder
    quick_code?: SortOrder
    language_code?: SortOrder
    quickcode_name?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type quickcode_mstWhereUniqueInput = Prisma.AtLeast<{
    quick_code_type_quick_code_language_code?: quickcode_mstQuick_code_typeQuick_codeLanguage_codeCompoundUniqueInput
    AND?: quickcode_mstWhereInput | quickcode_mstWhereInput[]
    OR?: quickcode_mstWhereInput[]
    NOT?: quickcode_mstWhereInput | quickcode_mstWhereInput[]
    quick_code_type?: StringFilter<"quickcode_mst"> | string
    quick_code?: StringFilter<"quickcode_mst"> | string
    language_code?: IntFilter<"quickcode_mst"> | number
    quickcode_name?: StringFilter<"quickcode_mst"> | string
    concurrency_val?: IntNullableFilter<"quickcode_mst"> | number | null
    created_by?: StringNullableFilter<"quickcode_mst"> | string | null
    created_date?: DateTimeNullableFilter<"quickcode_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"quickcode_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"quickcode_mst"> | Date | string | null
  }, "quick_code_type_quick_code_language_code">

  export type quickcode_mstOrderByWithAggregationInput = {
    quick_code_type?: SortOrder
    quick_code?: SortOrder
    language_code?: SortOrder
    quickcode_name?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: quickcode_mstCountOrderByAggregateInput
    _avg?: quickcode_mstAvgOrderByAggregateInput
    _max?: quickcode_mstMaxOrderByAggregateInput
    _min?: quickcode_mstMinOrderByAggregateInput
    _sum?: quickcode_mstSumOrderByAggregateInput
  }

  export type quickcode_mstScalarWhereWithAggregatesInput = {
    AND?: quickcode_mstScalarWhereWithAggregatesInput | quickcode_mstScalarWhereWithAggregatesInput[]
    OR?: quickcode_mstScalarWhereWithAggregatesInput[]
    NOT?: quickcode_mstScalarWhereWithAggregatesInput | quickcode_mstScalarWhereWithAggregatesInput[]
    quick_code_type?: StringWithAggregatesFilter<"quickcode_mst"> | string
    quick_code?: StringWithAggregatesFilter<"quickcode_mst"> | string
    language_code?: IntWithAggregatesFilter<"quickcode_mst"> | number
    quickcode_name?: StringWithAggregatesFilter<"quickcode_mst"> | string
    concurrency_val?: IntNullableWithAggregatesFilter<"quickcode_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"quickcode_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"quickcode_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"quickcode_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"quickcode_mst"> | Date | string | null
  }

  export type country_mstWhereInput = {
    AND?: country_mstWhereInput | country_mstWhereInput[]
    OR?: country_mstWhereInput[]
    NOT?: country_mstWhereInput | country_mstWhereInput[]
    country_code?: StringFilter<"country_mst"> | string
    language_code?: IntFilter<"country_mst"> | number
    country_name?: StringFilter<"country_mst"> | string
    nationality?: StringFilter<"country_mst"> | string
    ISD_code?: StringFilter<"country_mst"> | string
    concurrency_val?: IntNullableFilter<"country_mst"> | number | null
    created_by?: StringNullableFilter<"country_mst"> | string | null
    created_date?: DateTimeNullableFilter<"country_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"country_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"country_mst"> | Date | string | null
  }

  export type country_mstOrderByWithRelationInput = {
    country_code?: SortOrder
    language_code?: SortOrder
    country_name?: SortOrder
    nationality?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type country_mstWhereUniqueInput = Prisma.AtLeast<{
    country_code_language_code?: country_mstCountry_codeLanguage_codeCompoundUniqueInput
    AND?: country_mstWhereInput | country_mstWhereInput[]
    OR?: country_mstWhereInput[]
    NOT?: country_mstWhereInput | country_mstWhereInput[]
    country_code?: StringFilter<"country_mst"> | string
    language_code?: IntFilter<"country_mst"> | number
    country_name?: StringFilter<"country_mst"> | string
    nationality?: StringFilter<"country_mst"> | string
    ISD_code?: StringFilter<"country_mst"> | string
    concurrency_val?: IntNullableFilter<"country_mst"> | number | null
    created_by?: StringNullableFilter<"country_mst"> | string | null
    created_date?: DateTimeNullableFilter<"country_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"country_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"country_mst"> | Date | string | null
  }, "country_code_language_code">

  export type country_mstOrderByWithAggregationInput = {
    country_code?: SortOrder
    language_code?: SortOrder
    country_name?: SortOrder
    nationality?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: country_mstCountOrderByAggregateInput
    _avg?: country_mstAvgOrderByAggregateInput
    _max?: country_mstMaxOrderByAggregateInput
    _min?: country_mstMinOrderByAggregateInput
    _sum?: country_mstSumOrderByAggregateInput
  }

  export type country_mstScalarWhereWithAggregatesInput = {
    AND?: country_mstScalarWhereWithAggregatesInput | country_mstScalarWhereWithAggregatesInput[]
    OR?: country_mstScalarWhereWithAggregatesInput[]
    NOT?: country_mstScalarWhereWithAggregatesInput | country_mstScalarWhereWithAggregatesInput[]
    country_code?: StringWithAggregatesFilter<"country_mst"> | string
    language_code?: IntWithAggregatesFilter<"country_mst"> | number
    country_name?: StringWithAggregatesFilter<"country_mst"> | string
    nationality?: StringWithAggregatesFilter<"country_mst"> | string
    ISD_code?: StringWithAggregatesFilter<"country_mst"> | string
    concurrency_val?: IntNullableWithAggregatesFilter<"country_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"country_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"country_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"country_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"country_mst"> | Date | string | null
  }

  export type state_mstWhereInput = {
    AND?: state_mstWhereInput | state_mstWhereInput[]
    OR?: state_mstWhereInput[]
    NOT?: state_mstWhereInput | state_mstWhereInput[]
    state_code?: StringFilter<"state_mst"> | string
    country_code?: StringFilter<"state_mst"> | string
    language_code?: IntFilter<"state_mst"> | number
    state_name?: StringFilter<"state_mst"> | string
    ISD_code?: StringFilter<"state_mst"> | string
    concurrency_val?: IntNullableFilter<"state_mst"> | number | null
    created_by?: StringNullableFilter<"state_mst"> | string | null
    created_date?: DateTimeNullableFilter<"state_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"state_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"state_mst"> | Date | string | null
  }

  export type state_mstOrderByWithRelationInput = {
    state_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    state_name?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type state_mstWhereUniqueInput = Prisma.AtLeast<{
    state_code_country_code_language_code?: state_mstState_codeCountry_codeLanguage_codeCompoundUniqueInput
    AND?: state_mstWhereInput | state_mstWhereInput[]
    OR?: state_mstWhereInput[]
    NOT?: state_mstWhereInput | state_mstWhereInput[]
    state_code?: StringFilter<"state_mst"> | string
    country_code?: StringFilter<"state_mst"> | string
    language_code?: IntFilter<"state_mst"> | number
    state_name?: StringFilter<"state_mst"> | string
    ISD_code?: StringFilter<"state_mst"> | string
    concurrency_val?: IntNullableFilter<"state_mst"> | number | null
    created_by?: StringNullableFilter<"state_mst"> | string | null
    created_date?: DateTimeNullableFilter<"state_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"state_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"state_mst"> | Date | string | null
  }, "state_code_country_code_language_code">

  export type state_mstOrderByWithAggregationInput = {
    state_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    state_name?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: state_mstCountOrderByAggregateInput
    _avg?: state_mstAvgOrderByAggregateInput
    _max?: state_mstMaxOrderByAggregateInput
    _min?: state_mstMinOrderByAggregateInput
    _sum?: state_mstSumOrderByAggregateInput
  }

  export type state_mstScalarWhereWithAggregatesInput = {
    AND?: state_mstScalarWhereWithAggregatesInput | state_mstScalarWhereWithAggregatesInput[]
    OR?: state_mstScalarWhereWithAggregatesInput[]
    NOT?: state_mstScalarWhereWithAggregatesInput | state_mstScalarWhereWithAggregatesInput[]
    state_code?: StringWithAggregatesFilter<"state_mst"> | string
    country_code?: StringWithAggregatesFilter<"state_mst"> | string
    language_code?: IntWithAggregatesFilter<"state_mst"> | number
    state_name?: StringWithAggregatesFilter<"state_mst"> | string
    ISD_code?: StringWithAggregatesFilter<"state_mst"> | string
    concurrency_val?: IntNullableWithAggregatesFilter<"state_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"state_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"state_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"state_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"state_mst"> | Date | string | null
  }

  export type province_mstWhereInput = {
    AND?: province_mstWhereInput | province_mstWhereInput[]
    OR?: province_mstWhereInput[]
    NOT?: province_mstWhereInput | province_mstWhereInput[]
    province_code?: StringFilter<"province_mst"> | string
    country_code?: StringFilter<"province_mst"> | string
    language_code?: IntFilter<"province_mst"> | number
    province_name?: StringFilter<"province_mst"> | string
    short_name?: StringFilter<"province_mst"> | string
    date_format?: StringNullableFilter<"province_mst"> | string | null
    academic_year?: StringNullableFilter<"province_mst"> | string | null
    concurrency_val?: IntNullableFilter<"province_mst"> | number | null
    created_by?: StringNullableFilter<"province_mst"> | string | null
    created_date?: DateTimeNullableFilter<"province_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"province_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"province_mst"> | Date | string | null
  }

  export type province_mstOrderByWithRelationInput = {
    province_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    province_name?: SortOrder
    short_name?: SortOrder
    date_format?: SortOrderInput | SortOrder
    academic_year?: SortOrderInput | SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type province_mstWhereUniqueInput = Prisma.AtLeast<{
    province_code_country_code_language_code?: province_mstProvince_codeCountry_codeLanguage_codeCompoundUniqueInput
    AND?: province_mstWhereInput | province_mstWhereInput[]
    OR?: province_mstWhereInput[]
    NOT?: province_mstWhereInput | province_mstWhereInput[]
    province_code?: StringFilter<"province_mst"> | string
    country_code?: StringFilter<"province_mst"> | string
    language_code?: IntFilter<"province_mst"> | number
    province_name?: StringFilter<"province_mst"> | string
    short_name?: StringFilter<"province_mst"> | string
    date_format?: StringNullableFilter<"province_mst"> | string | null
    academic_year?: StringNullableFilter<"province_mst"> | string | null
    concurrency_val?: IntNullableFilter<"province_mst"> | number | null
    created_by?: StringNullableFilter<"province_mst"> | string | null
    created_date?: DateTimeNullableFilter<"province_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"province_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"province_mst"> | Date | string | null
  }, "province_code_country_code_language_code">

  export type province_mstOrderByWithAggregationInput = {
    province_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    province_name?: SortOrder
    short_name?: SortOrder
    date_format?: SortOrderInput | SortOrder
    academic_year?: SortOrderInput | SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: province_mstCountOrderByAggregateInput
    _avg?: province_mstAvgOrderByAggregateInput
    _max?: province_mstMaxOrderByAggregateInput
    _min?: province_mstMinOrderByAggregateInput
    _sum?: province_mstSumOrderByAggregateInput
  }

  export type province_mstScalarWhereWithAggregatesInput = {
    AND?: province_mstScalarWhereWithAggregatesInput | province_mstScalarWhereWithAggregatesInput[]
    OR?: province_mstScalarWhereWithAggregatesInput[]
    NOT?: province_mstScalarWhereWithAggregatesInput | province_mstScalarWhereWithAggregatesInput[]
    province_code?: StringWithAggregatesFilter<"province_mst"> | string
    country_code?: StringWithAggregatesFilter<"province_mst"> | string
    language_code?: IntWithAggregatesFilter<"province_mst"> | number
    province_name?: StringWithAggregatesFilter<"province_mst"> | string
    short_name?: StringWithAggregatesFilter<"province_mst"> | string
    date_format?: StringNullableWithAggregatesFilter<"province_mst"> | string | null
    academic_year?: StringNullableWithAggregatesFilter<"province_mst"> | string | null
    concurrency_val?: IntNullableWithAggregatesFilter<"province_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"province_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"province_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"province_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"province_mst"> | Date | string | null
  }

  export type apostolates_mstWhereInput = {
    AND?: apostolates_mstWhereInput | apostolates_mstWhereInput[]
    OR?: apostolates_mstWhereInput[]
    NOT?: apostolates_mstWhereInput | apostolates_mstWhereInput[]
    apostolate_code?: StringFilter<"apostolates_mst"> | string
    centre_type_code?: StringFilter<"apostolates_mst"> | string
    language_code?: IntFilter<"apostolates_mst"> | number
    apostolate_name?: StringFilter<"apostolates_mst"> | string
    centre_type_name?: StringFilter<"apostolates_mst"> | string
    date_format?: StringNullableFilter<"apostolates_mst"> | string | null
    academic_year?: StringNullableFilter<"apostolates_mst"> | string | null
    concurrency_val?: IntNullableFilter<"apostolates_mst"> | number | null
    created_by?: StringNullableFilter<"apostolates_mst"> | string | null
    created_date?: DateTimeNullableFilter<"apostolates_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"apostolates_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"apostolates_mst"> | Date | string | null
  }

  export type apostolates_mstOrderByWithRelationInput = {
    apostolate_code?: SortOrder
    centre_type_code?: SortOrder
    language_code?: SortOrder
    apostolate_name?: SortOrder
    centre_type_name?: SortOrder
    date_format?: SortOrderInput | SortOrder
    academic_year?: SortOrderInput | SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type apostolates_mstWhereUniqueInput = Prisma.AtLeast<{
    apostolate_code_centre_type_code_language_code?: apostolates_mstApostolate_codeCentre_type_codeLanguage_codeCompoundUniqueInput
    AND?: apostolates_mstWhereInput | apostolates_mstWhereInput[]
    OR?: apostolates_mstWhereInput[]
    NOT?: apostolates_mstWhereInput | apostolates_mstWhereInput[]
    apostolate_code?: StringFilter<"apostolates_mst"> | string
    centre_type_code?: StringFilter<"apostolates_mst"> | string
    language_code?: IntFilter<"apostolates_mst"> | number
    apostolate_name?: StringFilter<"apostolates_mst"> | string
    centre_type_name?: StringFilter<"apostolates_mst"> | string
    date_format?: StringNullableFilter<"apostolates_mst"> | string | null
    academic_year?: StringNullableFilter<"apostolates_mst"> | string | null
    concurrency_val?: IntNullableFilter<"apostolates_mst"> | number | null
    created_by?: StringNullableFilter<"apostolates_mst"> | string | null
    created_date?: DateTimeNullableFilter<"apostolates_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"apostolates_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"apostolates_mst"> | Date | string | null
  }, "apostolate_code_centre_type_code_language_code">

  export type apostolates_mstOrderByWithAggregationInput = {
    apostolate_code?: SortOrder
    centre_type_code?: SortOrder
    language_code?: SortOrder
    apostolate_name?: SortOrder
    centre_type_name?: SortOrder
    date_format?: SortOrderInput | SortOrder
    academic_year?: SortOrderInput | SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: apostolates_mstCountOrderByAggregateInput
    _avg?: apostolates_mstAvgOrderByAggregateInput
    _max?: apostolates_mstMaxOrderByAggregateInput
    _min?: apostolates_mstMinOrderByAggregateInput
    _sum?: apostolates_mstSumOrderByAggregateInput
  }

  export type apostolates_mstScalarWhereWithAggregatesInput = {
    AND?: apostolates_mstScalarWhereWithAggregatesInput | apostolates_mstScalarWhereWithAggregatesInput[]
    OR?: apostolates_mstScalarWhereWithAggregatesInput[]
    NOT?: apostolates_mstScalarWhereWithAggregatesInput | apostolates_mstScalarWhereWithAggregatesInput[]
    apostolate_code?: StringWithAggregatesFilter<"apostolates_mst"> | string
    centre_type_code?: StringWithAggregatesFilter<"apostolates_mst"> | string
    language_code?: IntWithAggregatesFilter<"apostolates_mst"> | number
    apostolate_name?: StringWithAggregatesFilter<"apostolates_mst"> | string
    centre_type_name?: StringWithAggregatesFilter<"apostolates_mst"> | string
    date_format?: StringNullableWithAggregatesFilter<"apostolates_mst"> | string | null
    academic_year?: StringNullableWithAggregatesFilter<"apostolates_mst"> | string | null
    concurrency_val?: IntNullableWithAggregatesFilter<"apostolates_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"apostolates_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"apostolates_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"apostolates_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"apostolates_mst"> | Date | string | null
  }

  export type users_mstWhereInput = {
    AND?: users_mstWhereInput | users_mstWhereInput[]
    OR?: users_mstWhereInput[]
    NOT?: users_mstWhereInput | users_mstWhereInput[]
    province_code?: StringFilter<"users_mst"> | string
    user_id?: StringFilter<"users_mst"> | string
    language_code?: IntFilter<"users_mst"> | number
    first_name?: StringFilter<"users_mst"> | string
    last_name?: StringNullableFilter<"users_mst"> | string | null
    password?: StringFilter<"users_mst"> | string
    user_type_code?: StringFilter<"users_mst"> | string
    concurrency_val?: IntNullableFilter<"users_mst"> | number | null
    created_by?: StringNullableFilter<"users_mst"> | string | null
    created_date?: DateTimeNullableFilter<"users_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"users_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"users_mst"> | Date | string | null
  }

  export type users_mstOrderByWithRelationInput = {
    province_code?: SortOrder
    user_id?: SortOrder
    language_code?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    password?: SortOrder
    user_type_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type users_mstWhereUniqueInput = Prisma.AtLeast<{
    province_code_user_id_language_code?: users_mstProvince_codeUser_idLanguage_codeCompoundUniqueInput
    AND?: users_mstWhereInput | users_mstWhereInput[]
    OR?: users_mstWhereInput[]
    NOT?: users_mstWhereInput | users_mstWhereInput[]
    province_code?: StringFilter<"users_mst"> | string
    user_id?: StringFilter<"users_mst"> | string
    language_code?: IntFilter<"users_mst"> | number
    first_name?: StringFilter<"users_mst"> | string
    last_name?: StringNullableFilter<"users_mst"> | string | null
    password?: StringFilter<"users_mst"> | string
    user_type_code?: StringFilter<"users_mst"> | string
    concurrency_val?: IntNullableFilter<"users_mst"> | number | null
    created_by?: StringNullableFilter<"users_mst"> | string | null
    created_date?: DateTimeNullableFilter<"users_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"users_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"users_mst"> | Date | string | null
  }, "province_code_user_id_language_code">

  export type users_mstOrderByWithAggregationInput = {
    province_code?: SortOrder
    user_id?: SortOrder
    language_code?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    password?: SortOrder
    user_type_code?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: users_mstCountOrderByAggregateInput
    _avg?: users_mstAvgOrderByAggregateInput
    _max?: users_mstMaxOrderByAggregateInput
    _min?: users_mstMinOrderByAggregateInput
    _sum?: users_mstSumOrderByAggregateInput
  }

  export type users_mstScalarWhereWithAggregatesInput = {
    AND?: users_mstScalarWhereWithAggregatesInput | users_mstScalarWhereWithAggregatesInput[]
    OR?: users_mstScalarWhereWithAggregatesInput[]
    NOT?: users_mstScalarWhereWithAggregatesInput | users_mstScalarWhereWithAggregatesInput[]
    province_code?: StringWithAggregatesFilter<"users_mst"> | string
    user_id?: StringWithAggregatesFilter<"users_mst"> | string
    language_code?: IntWithAggregatesFilter<"users_mst"> | number
    first_name?: StringWithAggregatesFilter<"users_mst"> | string
    last_name?: StringNullableWithAggregatesFilter<"users_mst"> | string | null
    password?: StringWithAggregatesFilter<"users_mst"> | string
    user_type_code?: StringWithAggregatesFilter<"users_mst"> | string
    concurrency_val?: IntNullableWithAggregatesFilter<"users_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"users_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"users_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"users_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"users_mst"> | Date | string | null
  }

  export type division_setup_mstWhereInput = {
    AND?: division_setup_mstWhereInput | division_setup_mstWhereInput[]
    OR?: division_setup_mstWhereInput[]
    NOT?: division_setup_mstWhereInput | division_setup_mstWhereInput[]
    province_code?: StringFilter<"division_setup_mst"> | string
    division_type_code?: StringFilter<"division_setup_mst"> | string
    division_code?: StringFilter<"division_setup_mst"> | string
    language_code?: IntFilter<"division_setup_mst"> | number
    division_name?: StringFilter<"division_setup_mst"> | string
    concurrency_val?: IntNullableFilter<"division_setup_mst"> | number | null
    created_by?: StringNullableFilter<"division_setup_mst"> | string | null
    created_date?: DateTimeNullableFilter<"division_setup_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"division_setup_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"division_setup_mst"> | Date | string | null
  }

  export type division_setup_mstOrderByWithRelationInput = {
    province_code?: SortOrder
    division_type_code?: SortOrder
    division_code?: SortOrder
    language_code?: SortOrder
    division_name?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
  }

  export type division_setup_mstWhereUniqueInput = Prisma.AtLeast<{
    province_code_division_type_code_division_code_language_code?: division_setup_mstProvince_codeDivision_type_codeDivision_codeLanguage_codeCompoundUniqueInput
    AND?: division_setup_mstWhereInput | division_setup_mstWhereInput[]
    OR?: division_setup_mstWhereInput[]
    NOT?: division_setup_mstWhereInput | division_setup_mstWhereInput[]
    province_code?: StringFilter<"division_setup_mst"> | string
    division_type_code?: StringFilter<"division_setup_mst"> | string
    division_code?: StringFilter<"division_setup_mst"> | string
    language_code?: IntFilter<"division_setup_mst"> | number
    division_name?: StringFilter<"division_setup_mst"> | string
    concurrency_val?: IntNullableFilter<"division_setup_mst"> | number | null
    created_by?: StringNullableFilter<"division_setup_mst"> | string | null
    created_date?: DateTimeNullableFilter<"division_setup_mst"> | Date | string | null
    updated_by?: StringNullableFilter<"division_setup_mst"> | string | null
    updated_date?: DateTimeNullableFilter<"division_setup_mst"> | Date | string | null
  }, "province_code_division_type_code_division_code_language_code">

  export type division_setup_mstOrderByWithAggregationInput = {
    province_code?: SortOrder
    division_type_code?: SortOrder
    division_code?: SortOrder
    language_code?: SortOrder
    division_name?: SortOrder
    concurrency_val?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_date?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_date?: SortOrderInput | SortOrder
    _count?: division_setup_mstCountOrderByAggregateInput
    _avg?: division_setup_mstAvgOrderByAggregateInput
    _max?: division_setup_mstMaxOrderByAggregateInput
    _min?: division_setup_mstMinOrderByAggregateInput
    _sum?: division_setup_mstSumOrderByAggregateInput
  }

  export type division_setup_mstScalarWhereWithAggregatesInput = {
    AND?: division_setup_mstScalarWhereWithAggregatesInput | division_setup_mstScalarWhereWithAggregatesInput[]
    OR?: division_setup_mstScalarWhereWithAggregatesInput[]
    NOT?: division_setup_mstScalarWhereWithAggregatesInput | division_setup_mstScalarWhereWithAggregatesInput[]
    province_code?: StringWithAggregatesFilter<"division_setup_mst"> | string
    division_type_code?: StringWithAggregatesFilter<"division_setup_mst"> | string
    division_code?: StringWithAggregatesFilter<"division_setup_mst"> | string
    language_code?: IntWithAggregatesFilter<"division_setup_mst"> | number
    division_name?: StringWithAggregatesFilter<"division_setup_mst"> | string
    concurrency_val?: IntNullableWithAggregatesFilter<"division_setup_mst"> | number | null
    created_by?: StringNullableWithAggregatesFilter<"division_setup_mst"> | string | null
    created_date?: DateTimeNullableWithAggregatesFilter<"division_setup_mst"> | Date | string | null
    updated_by?: StringNullableWithAggregatesFilter<"division_setup_mst"> | string | null
    updated_date?: DateTimeNullableWithAggregatesFilter<"division_setup_mst"> | Date | string | null
  }

  export type metadata_mstCreateInput = {
    screen_code: string
    meta_code: string
    screen_name: string
    meta_code_name: string
  }

  export type metadata_mstUncheckedCreateInput = {
    screen_code: string
    meta_code: string
    screen_name: string
    meta_code_name: string
  }

  export type metadata_mstUpdateInput = {
    screen_code?: StringFieldUpdateOperationsInput | string
    meta_code?: StringFieldUpdateOperationsInput | string
    screen_name?: StringFieldUpdateOperationsInput | string
    meta_code_name?: StringFieldUpdateOperationsInput | string
  }

  export type metadata_mstUncheckedUpdateInput = {
    screen_code?: StringFieldUpdateOperationsInput | string
    meta_code?: StringFieldUpdateOperationsInput | string
    screen_name?: StringFieldUpdateOperationsInput | string
    meta_code_name?: StringFieldUpdateOperationsInput | string
  }

  export type metadata_mstCreateManyInput = {
    screen_code: string
    meta_code: string
    screen_name: string
    meta_code_name: string
  }

  export type metadata_mstUpdateManyMutationInput = {
    screen_code?: StringFieldUpdateOperationsInput | string
    meta_code?: StringFieldUpdateOperationsInput | string
    screen_name?: StringFieldUpdateOperationsInput | string
    meta_code_name?: StringFieldUpdateOperationsInput | string
  }

  export type metadata_mstUncheckedUpdateManyInput = {
    screen_code?: StringFieldUpdateOperationsInput | string
    meta_code?: StringFieldUpdateOperationsInput | string
    screen_name?: StringFieldUpdateOperationsInput | string
    meta_code_name?: StringFieldUpdateOperationsInput | string
  }

  export type quickcode_mstCreateInput = {
    quick_code_type: string
    quick_code: string
    language_code: number
    quickcode_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type quickcode_mstUncheckedCreateInput = {
    quick_code_type: string
    quick_code: string
    language_code: number
    quickcode_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type quickcode_mstUpdateInput = {
    quick_code_type?: StringFieldUpdateOperationsInput | string
    quick_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    quickcode_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type quickcode_mstUncheckedUpdateInput = {
    quick_code_type?: StringFieldUpdateOperationsInput | string
    quick_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    quickcode_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type quickcode_mstCreateManyInput = {
    quick_code_type: string
    quick_code: string
    language_code: number
    quickcode_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type quickcode_mstUpdateManyMutationInput = {
    quick_code_type?: StringFieldUpdateOperationsInput | string
    quick_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    quickcode_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type quickcode_mstUncheckedUpdateManyInput = {
    quick_code_type?: StringFieldUpdateOperationsInput | string
    quick_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    quickcode_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type country_mstCreateInput = {
    country_code: string
    language_code: number
    country_name: string
    nationality: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type country_mstUncheckedCreateInput = {
    country_code: string
    language_code: number
    country_name: string
    nationality: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type country_mstUpdateInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    country_name?: StringFieldUpdateOperationsInput | string
    nationality?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type country_mstUncheckedUpdateInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    country_name?: StringFieldUpdateOperationsInput | string
    nationality?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type country_mstCreateManyInput = {
    country_code: string
    language_code: number
    country_name: string
    nationality: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type country_mstUpdateManyMutationInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    country_name?: StringFieldUpdateOperationsInput | string
    nationality?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type country_mstUncheckedUpdateManyInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    country_name?: StringFieldUpdateOperationsInput | string
    nationality?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type state_mstCreateInput = {
    state_code: string
    country_code: string
    language_code: number
    state_name: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type state_mstUncheckedCreateInput = {
    state_code: string
    country_code: string
    language_code: number
    state_name: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type state_mstUpdateInput = {
    state_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    state_name?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type state_mstUncheckedUpdateInput = {
    state_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    state_name?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type state_mstCreateManyInput = {
    state_code: string
    country_code: string
    language_code: number
    state_name: string
    ISD_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type state_mstUpdateManyMutationInput = {
    state_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    state_name?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type state_mstUncheckedUpdateManyInput = {
    state_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    state_name?: StringFieldUpdateOperationsInput | string
    ISD_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type province_mstCreateInput = {
    province_code: string
    country_code: string
    language_code: number
    province_name: string
    short_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type province_mstUncheckedCreateInput = {
    province_code: string
    country_code: string
    language_code: number
    province_name: string
    short_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type province_mstUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    province_name?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type province_mstUncheckedUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    province_name?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type province_mstCreateManyInput = {
    province_code: string
    country_code: string
    language_code: number
    province_name: string
    short_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type province_mstUpdateManyMutationInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    province_name?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type province_mstUncheckedUpdateManyInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    province_name?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apostolates_mstCreateInput = {
    apostolate_code: string
    centre_type_code: string
    language_code: number
    apostolate_name: string
    centre_type_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type apostolates_mstUncheckedCreateInput = {
    apostolate_code: string
    centre_type_code: string
    language_code: number
    apostolate_name: string
    centre_type_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type apostolates_mstUpdateInput = {
    apostolate_code?: StringFieldUpdateOperationsInput | string
    centre_type_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    apostolate_name?: StringFieldUpdateOperationsInput | string
    centre_type_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apostolates_mstUncheckedUpdateInput = {
    apostolate_code?: StringFieldUpdateOperationsInput | string
    centre_type_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    apostolate_name?: StringFieldUpdateOperationsInput | string
    centre_type_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apostolates_mstCreateManyInput = {
    apostolate_code: string
    centre_type_code: string
    language_code: number
    apostolate_name: string
    centre_type_name: string
    date_format?: string | null
    academic_year?: string | null
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type apostolates_mstUpdateManyMutationInput = {
    apostolate_code?: StringFieldUpdateOperationsInput | string
    centre_type_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    apostolate_name?: StringFieldUpdateOperationsInput | string
    centre_type_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apostolates_mstUncheckedUpdateManyInput = {
    apostolate_code?: StringFieldUpdateOperationsInput | string
    centre_type_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    apostolate_name?: StringFieldUpdateOperationsInput | string
    centre_type_name?: StringFieldUpdateOperationsInput | string
    date_format?: NullableStringFieldUpdateOperationsInput | string | null
    academic_year?: NullableStringFieldUpdateOperationsInput | string | null
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_mstCreateInput = {
    province_code: string
    user_id: string
    language_code: number
    first_name: string
    last_name?: string | null
    password: string
    user_type_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type users_mstUncheckedCreateInput = {
    province_code: string
    user_id: string
    language_code: number
    first_name: string
    last_name?: string | null
    password: string
    user_type_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type users_mstUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    user_type_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_mstUncheckedUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    user_type_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_mstCreateManyInput = {
    province_code: string
    user_id: string
    language_code: number
    first_name: string
    last_name?: string | null
    password: string
    user_type_code: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type users_mstUpdateManyMutationInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    user_type_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_mstUncheckedUpdateManyInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    user_type_code?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type division_setup_mstCreateInput = {
    province_code: string
    division_type_code: string
    division_code: string
    language_code: number
    division_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type division_setup_mstUncheckedCreateInput = {
    province_code: string
    division_type_code: string
    division_code: string
    language_code: number
    division_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type division_setup_mstUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    division_type_code?: StringFieldUpdateOperationsInput | string
    division_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    division_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type division_setup_mstUncheckedUpdateInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    division_type_code?: StringFieldUpdateOperationsInput | string
    division_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    division_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type division_setup_mstCreateManyInput = {
    province_code: string
    division_type_code: string
    division_code: string
    language_code: number
    division_name: string
    concurrency_val?: number | null
    created_by?: string | null
    created_date?: Date | string | null
    updated_by?: string | null
    updated_date?: Date | string | null
  }

  export type division_setup_mstUpdateManyMutationInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    division_type_code?: StringFieldUpdateOperationsInput | string
    division_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    division_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type division_setup_mstUncheckedUpdateManyInput = {
    province_code?: StringFieldUpdateOperationsInput | string
    division_type_code?: StringFieldUpdateOperationsInput | string
    division_code?: StringFieldUpdateOperationsInput | string
    language_code?: IntFieldUpdateOperationsInput | number
    division_name?: StringFieldUpdateOperationsInput | string
    concurrency_val?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type metadata_mstScreen_codeMeta_codeCompoundUniqueInput = {
    screen_code: string
    meta_code: string
  }

  export type metadata_mstCountOrderByAggregateInput = {
    screen_code?: SortOrder
    meta_code?: SortOrder
    screen_name?: SortOrder
    meta_code_name?: SortOrder
  }

  export type metadata_mstMaxOrderByAggregateInput = {
    screen_code?: SortOrder
    meta_code?: SortOrder
    screen_name?: SortOrder
    meta_code_name?: SortOrder
  }

  export type metadata_mstMinOrderByAggregateInput = {
    screen_code?: SortOrder
    meta_code?: SortOrder
    screen_name?: SortOrder
    meta_code_name?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type quickcode_mstQuick_code_typeQuick_codeLanguage_codeCompoundUniqueInput = {
    quick_code_type: string
    quick_code: string
    language_code: number
  }

  export type quickcode_mstCountOrderByAggregateInput = {
    quick_code_type?: SortOrder
    quick_code?: SortOrder
    language_code?: SortOrder
    quickcode_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type quickcode_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type quickcode_mstMaxOrderByAggregateInput = {
    quick_code_type?: SortOrder
    quick_code?: SortOrder
    language_code?: SortOrder
    quickcode_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type quickcode_mstMinOrderByAggregateInput = {
    quick_code_type?: SortOrder
    quick_code?: SortOrder
    language_code?: SortOrder
    quickcode_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type quickcode_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type country_mstCountry_codeLanguage_codeCompoundUniqueInput = {
    country_code: string
    language_code: number
  }

  export type country_mstCountOrderByAggregateInput = {
    country_code?: SortOrder
    language_code?: SortOrder
    country_name?: SortOrder
    nationality?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type country_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type country_mstMaxOrderByAggregateInput = {
    country_code?: SortOrder
    language_code?: SortOrder
    country_name?: SortOrder
    nationality?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type country_mstMinOrderByAggregateInput = {
    country_code?: SortOrder
    language_code?: SortOrder
    country_name?: SortOrder
    nationality?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type country_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type state_mstState_codeCountry_codeLanguage_codeCompoundUniqueInput = {
    state_code: string
    country_code: string
    language_code: number
  }

  export type state_mstCountOrderByAggregateInput = {
    state_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    state_name?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type state_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type state_mstMaxOrderByAggregateInput = {
    state_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    state_name?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type state_mstMinOrderByAggregateInput = {
    state_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    state_name?: SortOrder
    ISD_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type state_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type province_mstProvince_codeCountry_codeLanguage_codeCompoundUniqueInput = {
    province_code: string
    country_code: string
    language_code: number
  }

  export type province_mstCountOrderByAggregateInput = {
    province_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    province_name?: SortOrder
    short_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type province_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type province_mstMaxOrderByAggregateInput = {
    province_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    province_name?: SortOrder
    short_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type province_mstMinOrderByAggregateInput = {
    province_code?: SortOrder
    country_code?: SortOrder
    language_code?: SortOrder
    province_name?: SortOrder
    short_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type province_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type apostolates_mstApostolate_codeCentre_type_codeLanguage_codeCompoundUniqueInput = {
    apostolate_code: string
    centre_type_code: string
    language_code: number
  }

  export type apostolates_mstCountOrderByAggregateInput = {
    apostolate_code?: SortOrder
    centre_type_code?: SortOrder
    language_code?: SortOrder
    apostolate_name?: SortOrder
    centre_type_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type apostolates_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type apostolates_mstMaxOrderByAggregateInput = {
    apostolate_code?: SortOrder
    centre_type_code?: SortOrder
    language_code?: SortOrder
    apostolate_name?: SortOrder
    centre_type_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type apostolates_mstMinOrderByAggregateInput = {
    apostolate_code?: SortOrder
    centre_type_code?: SortOrder
    language_code?: SortOrder
    apostolate_name?: SortOrder
    centre_type_name?: SortOrder
    date_format?: SortOrder
    academic_year?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type apostolates_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type users_mstProvince_codeUser_idLanguage_codeCompoundUniqueInput = {
    province_code: string
    user_id: string
    language_code: number
  }

  export type users_mstCountOrderByAggregateInput = {
    province_code?: SortOrder
    user_id?: SortOrder
    language_code?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    password?: SortOrder
    user_type_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type users_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type users_mstMaxOrderByAggregateInput = {
    province_code?: SortOrder
    user_id?: SortOrder
    language_code?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    password?: SortOrder
    user_type_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type users_mstMinOrderByAggregateInput = {
    province_code?: SortOrder
    user_id?: SortOrder
    language_code?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    password?: SortOrder
    user_type_code?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type users_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type division_setup_mstProvince_codeDivision_type_codeDivision_codeLanguage_codeCompoundUniqueInput = {
    province_code: string
    division_type_code: string
    division_code: string
    language_code: number
  }

  export type division_setup_mstCountOrderByAggregateInput = {
    province_code?: SortOrder
    division_type_code?: SortOrder
    division_code?: SortOrder
    language_code?: SortOrder
    division_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type division_setup_mstAvgOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type division_setup_mstMaxOrderByAggregateInput = {
    province_code?: SortOrder
    division_type_code?: SortOrder
    division_code?: SortOrder
    language_code?: SortOrder
    division_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type division_setup_mstMinOrderByAggregateInput = {
    province_code?: SortOrder
    division_type_code?: SortOrder
    division_code?: SortOrder
    language_code?: SortOrder
    division_name?: SortOrder
    concurrency_val?: SortOrder
    created_by?: SortOrder
    created_date?: SortOrder
    updated_by?: SortOrder
    updated_date?: SortOrder
  }

  export type division_setup_mstSumOrderByAggregateInput = {
    language_code?: SortOrder
    concurrency_val?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use metadata_mstDefaultArgs instead
     */
    export type metadata_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = metadata_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use quickcode_mstDefaultArgs instead
     */
    export type quickcode_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = quickcode_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use country_mstDefaultArgs instead
     */
    export type country_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = country_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use state_mstDefaultArgs instead
     */
    export type state_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = state_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use province_mstDefaultArgs instead
     */
    export type province_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = province_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use apostolates_mstDefaultArgs instead
     */
    export type apostolates_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = apostolates_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use users_mstDefaultArgs instead
     */
    export type users_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = users_mstDefaultArgs<ExtArgs>
    /**
     * @deprecated Use division_setup_mstDefaultArgs instead
     */
    export type division_setup_mstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = division_setup_mstDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}