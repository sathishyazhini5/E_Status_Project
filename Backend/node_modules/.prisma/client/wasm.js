
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.16.2
 * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
 */
Prisma.prismaVersion = {
  client: "5.16.2",
  engine: "e9771e62de70f79a5e1c604a2d7c8e2a0a874b48"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Metadata_mstScalarFieldEnum = {
  screen_code: 'screen_code',
  meta_code: 'meta_code',
  screen_name: 'screen_name',
  meta_code_name: 'meta_code_name'
};

exports.Prisma.Quickcode_mstScalarFieldEnum = {
  quick_code_type: 'quick_code_type',
  quick_code: 'quick_code',
  language_code: 'language_code',
  quickcode_name: 'quickcode_name',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.Country_mstScalarFieldEnum = {
  country_code: 'country_code',
  language_code: 'language_code',
  country_name: 'country_name',
  nationality: 'nationality',
  ISD_code: 'ISD_code',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.State_mstScalarFieldEnum = {
  state_code: 'state_code',
  country_code: 'country_code',
  language_code: 'language_code',
  state_name: 'state_name',
  ISD_code: 'ISD_code',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.Province_mstScalarFieldEnum = {
  province_code: 'province_code',
  country_code: 'country_code',
  language_code: 'language_code',
  province_name: 'province_name',
  short_name: 'short_name',
  date_format: 'date_format',
  academic_year: 'academic_year',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.Apostolates_mstScalarFieldEnum = {
  apostolate_code: 'apostolate_code',
  centre_type_code: 'centre_type_code',
  language_code: 'language_code',
  apostolate_name: 'apostolate_name',
  centre_type_name: 'centre_type_name',
  date_format: 'date_format',
  academic_year: 'academic_year',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.Users_mstScalarFieldEnum = {
  province_code: 'province_code',
  user_id: 'user_id',
  language_code: 'language_code',
  first_name: 'first_name',
  last_name: 'last_name',
  password: 'password',
  user_type_code: 'user_type_code',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.Division_setup_mstScalarFieldEnum = {
  province_code: 'province_code',
  division_type_code: 'division_type_code',
  division_code: 'division_code',
  language_code: 'language_code',
  division_name: 'division_name',
  concurrency_val: 'concurrency_val',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  metadata_mst: 'metadata_mst',
  quickcode_mst: 'quickcode_mst',
  country_mst: 'country_mst',
  state_mst: 'state_mst',
  province_mst: 'province_mst',
  apostolates_mst: 'apostolates_mst',
  users_mst: 'users_mst',
  division_setup_mst: 'division_setup_mst'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
